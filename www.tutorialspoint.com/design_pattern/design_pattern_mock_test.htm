<!DOCTYPE html>
<!--[if IE 8]><html class="ie ie8"> <![endif]-->
<!--[if IE 9]><html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->	<html> <!--<![endif]-->
<head>
<!-- Basic -->
<meta charset="utf-8">
<title>Design Patterns Mock Test - TutorialsPoint</title>
<meta name="description" content="Design Patterns Mock Test - Learning java design patterns in simple and easy steps : A beginner's tutorial containing complete knowledge about an java design patterns starting from its Factory Pattern, Abstract Factory, Singleton, Builder, Prototype, Adapter, Bridge, Filter, Composite, Decorator, Facade, Flyweight, Proxy, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Null Object,Strategy, Template, Visitor, MVC, Front Controller etc." />
<meta name="keywords" content="Design, Patterns, Java, Tutorials, Learning, Beginners, Basics, Factory Pattern, Abstract Factory, Singleton, Builder, Prototype, Adapter, Bridge, Filter, Composite, Decorator, Facade, Flyweight, Proxy, Command, Interpreter, Iterator, Mediator, Memento, Observer, State, Null Object,Strategy, Template, Visitor, MVC, Front, Controller." />
<base href="https://www.tutorialspoint.com/" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="website" />
<meta property="fb:app_id" content="471319149685276" />
<meta property="og:site_name" content="www.tutorialspoint.com" />
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="author" content="tutorialspoint.com">
<script type="text/javascript" src="https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2"></script>
<link rel="stylesheet" href="https://www.tutorialspoint.com/theme/css/style-min.css?v=3">
<script>
function openNav() {	
  document.getElementById("mySidenav").style.width = "250px";
  document.getElementById("right_obs").style.display = "block";
}
function closeNav() {
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
function close_obs_sidenav(){
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
</script>
<!-- Head Libs -->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="/theme/css/ie8.css">
<![endif]-->
<style>
select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }
.btnsbmt{ background: #fa8400 !important;}
ul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #fa8400 url(/images/pattern.png) repeat center center !important;}
.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #fa8400 !important;}
.submenu-item{ border-bottom: 2px solid #fa8400 !important; border-top: 2px solid #fa8400 !important }
.ace_scroller{overflow: auto!important;}
a.demo{font-family: "Open Sans",Arial,sans-serif; background:#fa8400; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}
a.demo:hover{opacity:.8}
</style>
<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>
</head>
<body onload="prettyPrint()">
<div class="wrapLoader">
   <div class="imgLoader">
      <img  src="/images/loading-cg.gif" alt="" width="70" height="70" />
   </div>
</div>
<div id="right_obs" class="display-none" onclick="close_obs_sidenav()"></div>
<header>
   <div class="container">			
      <h1 class="logo">
      <a href="index.htm" title="tutorialspoint">
      <img alt="tutorialspoint" src="/design_pattern/images/logo.png">
      </a>
      </h1>			
      <ul class="tp-inline-block pull-right" id="tp-head-icons">
        <li>
           <div class="tp-second-nav tp-display-none tp-pointer" onclick="openNav()">
              <i class="fa fa-th-large fa-lg"></i>
           </div>
        </li>
     </ul>
     <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull" style="top: 24px!important"> <i class="icon icon-bars"></i> </button>
      <nav>
         <ul class="nav nav-pills nav-top">
            <li><a href="/about/about_careers.htm" style="background: #fffb09; font-weight: bold;"><i class="icon icon-suitcase"></i> Jobs</a></li>
            <li> <a target="_blank" href="/programming_examples/"><i class="fa fa-cubes"></i> &nbsp;Examples</a> </li>
            <li> <a href="https://www.tutorialspoint.com/whiteboard.htm"><img src="theme/css/icons/image-editor.png" alt="Whiteboard" title="Whiteboard"> &nbsp;Whiteboard</a> </li>
            <li> <a href="https://www.tutorialspoint.com/netmeeting.php"><i class="fa-camera"></i> &nbsp;Net Meeting</a> </li>
            <li> <a href="/online_dev_tools.htm"> <i class="dev-tools-menu" style="opacity:.5"></i> Tools </a> </li>
            <li> <a href="/articles/index.php"><i class="icon icon-file-text-o"></i> &nbsp;Articles</a> </li>            
            <li class="top-icons">
              <ul class="social-icons">
              <li class="facebook"><a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook">Facebook</a></li>
              <li class="googleplus"><a href="https://plus.google.com/u/0/116678774017490391259/posts" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Google+">Google+</a></li>
              <li class="twitter"><a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter">Twitter</a></li>
              <li class="linkedin"><a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin">Linkedin</a></li>
              <li class="youtube"><a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube">YouTube</a></li>
              </ul>
           </li>
         </ul>
      </nav>
    </div>
     <div class="sidenav" id="mySidenav">
     <div class="navbar nav-main">
      <div class="container">
         <nav class="nav-main mega-menu">
            <ul class="nav nav-pills nav-main" id="mainMenu">
               <li class="dropdown no-sub-menu"> <a class="dropdown" href="index.htm"><i class="icon icon-home"></i> Home</a> </li>   
               <li class="dropdown no-sub-menu"><a class="dropdown" href="/questions/index.php"><i class="fa fa-send"></i> Q/A </a> </li>
               <li class="dropdown"><a class="dropdown" href="tutorialslibrary.htm"><span class="tut-lib"> Library </span></a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="videotutorials/index.htm"><i class="fa-toggle-right"></i> Videos </a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="tutor_connect/index.php"><i class="fa-user"> </i> Tutors</a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="codingground.htm"><i class="fa-code"></i> Coding Ground </a> </li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://store.tutorialspoint.com/"><i class="fa-usd"></i> Store </a> </li>
               <li class="dropdown no-sub-menu">
                  <div class="searchform-popup">
                     <input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
                     <div class="magnifying-glass"><i class="icon-search"></i> Search </div>
                 </div>
               </li>
            </ul>
         </nav>
        </div>
      </div>	
     </div>	
   </div>	
</header>
<div style="clear:both;"></div>
<div role="main" class="main">
<div class="container">
<div class="row">
<div class="col-md-2">
<aside class="sidebar">
<div class="mini-logo">
<img src="/design_pattern/images/java-design-patterns-mini-logo.jpg" alt="Design Patterns Tutorial" />
</div>
<ul class="nav nav-list primary left-menu" >
<li class="heading">Design Patterns Tutorial</li>
<li><a href="/design_pattern/index.htm">Design Patterns - Home</a></li>
<li><a href="/design_pattern/design_pattern_overview.htm">Design Patterns -  Overview</a></li>
<li><a href="/design_pattern/factory_pattern.htm">Design Patterns - Factory Pattern</a></li>
<li><a href="/design_pattern/abstract_factory_pattern.htm">Abstract Factory Pattern</a></li>
<li><a href="/design_pattern/singleton_pattern.htm">Design Patterns - Singleton Pattern</a></li>
<li><a href="/design_pattern/builder_pattern.htm">Design Patterns - Builder Pattern</a></li>
<li><a href="/design_pattern/prototype_pattern.htm">Design Patterns - Prototype Pattern</a></li>
<li><a href="/design_pattern/adapter_pattern.htm">Design Patterns - Adapter Pattern</a></li>
<li><a href="/design_pattern/bridge_pattern.htm">Design Patterns - Bridge Pattern</a></li>
<li><a href="/design_pattern/filter_pattern.htm">Design Patterns - Filter Pattern</a></li>
<li><a href="/design_pattern/composite_pattern.htm">Design Patterns - Composite Pattern</a></li>
<li><a href="/design_pattern/decorator_pattern.htm">Design Patterns - Decorator Pattern</a></li>
<li><a href="/design_pattern/facade_pattern.htm">Design Patterns - Facade Pattern</a></li>
<li><a href="/design_pattern/flyweight_pattern.htm">Design Patterns - Flyweight Pattern</a></li>
<li><a href="/design_pattern/proxy_pattern.htm">Design Patterns - Proxy Pattern</a></li>
<li><a href="/design_pattern/chain_of_responsibility_pattern.htm">Chain of Responsibility Pattern</a></li>
<li><a href="/design_pattern/command_pattern.htm">Design Patterns - Command Pattern</a></li>
<li><a href="/design_pattern/interpreter_pattern.htm">Design Patterns - Interpreter Pattern</a></li>
<li><a href="/design_pattern/iterator_pattern.htm">Design Patterns - Iterator Pattern</a></li>
<li><a href="/design_pattern/mediator_pattern.htm">Design Patterns - Mediator Pattern</a></li>
<li><a href="/design_pattern/memento_pattern.htm">Design Patterns - Memento Pattern</a></li>
<li><a href="/design_pattern/observer_pattern.htm">Design Patterns - Observer Pattern</a></li>
<li><a href="/design_pattern/state_pattern.htm">Design Patterns - State Pattern</a></li>
<li><a href="/design_pattern/null_object_pattern.htm">Design Patterns - Null Object Pattern</a></li>
<li><a href="/design_pattern/strategy_pattern.htm">Design Patterns - Strategy Pattern</a></li>
<li><a href="/design_pattern/template_pattern.htm">Design Patterns - Template Pattern</a></li>
<li><a href="/design_pattern/visitor_pattern.htm">Design Patterns - Visitor Pattern</a></li>
<li><a href="/design_pattern/mvc_pattern.htm">Design Patterns - MVC Pattern</a></li>
<li><a href="/design_pattern/business_delegate_pattern.htm">Business Delegate Pattern</a></li>
<li><a href="/design_pattern/composite_entity_pattern.htm">Composite Entity Pattern</a></li>
<li><a href="/design_pattern/data_access_object_pattern.htm">Data Access Object Pattern</a></li>
<li><a href="/design_pattern/front_controller_pattern.htm">Front Controller Pattern</a></li>
<li><a href="/design_pattern/intercepting_filter_pattern.htm">Intercepting Filter Pattern</a></li>
<li><a href="/design_pattern/service_locator_pattern.htm">Service Locator  Pattern</a></li>
<li><a href="/design_pattern/transfer_object_pattern.htm">Transfer Object Pattern</a></li>
</ul>
<ul class="nav nav-list primary left-menu" >
<li class="heading">Design Patterns Resources</li>
<li><a class="left" href="/design_pattern/design_pattern_questions_answers.htm">Design Patterns - Questions/Answers</a></li>
<li><a class="left" href="/design_pattern/design_pattern_quick_guide.htm">Design Patterns - Quick Guide</a></li>
<li><a class="left" href="/design_pattern/design_pattern_resources.htm">Design Patterns - Useful Resources</a></li>
<li><a class="left" href="/design_pattern/design_pattern_discussion.htm">Design Patterns - Discussion</a></li>
</ul>
<ul class="nav nav-list primary push-bottom left-menu special">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</aside>
</div>
<!-- PRINTING STARTS HERE -->
<div class="row">
<div class="content">
<div class="col-md-7 middle-col">
<h1>Design Patterns Mock Test</h1>
<hr />
<div style="padding-bottom:5px;padding-left:10px;text-align: center;">Advertisements</div>
<div style="text-align: center;">
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="https://pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="/design_pattern/design_pattern_questions_answers.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/design_pattern/design_pattern_questions_answers.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<div class="clearer"></div>
<hr />
<p>This section presents you various set of Mock Tests related to <b>Design Patterns Framework</b>.  You can download these sample mock tests at your local machine and solve offline at your convenience. Every mock test is supplied with a mock test key to let you verify the final score and grade yourself.</p>
<img src="/images/online_mock_tests.png" alt="Questions and Answers" />
<a href="/design_pattern/design_pattern_mock_test.htm?min=1&max=25"><button type="button" class="btn btn-default btn-mt"><i class="icon  icon-file-pdf-o"></i> Mock Test I</button></a>
<a href="/design_pattern/design_pattern_mock_test.htm?min=26&max=50"><button type="button" class="btn btn-default btn-mt"><i class="icon  icon-file-pdf-o"></i> Mock Test II</button></a>
<a href="/design_pattern/design_pattern_mock_test.htm?min=51&max=75"><button type="button" class="btn btn-default btn-mt"><i class="icon  icon-file-pdf-o"></i> Mock Test III</button></a>
<a href="/design_pattern/design_pattern_mock_test.htm?min=76&max=100"><button type="button" class="btn btn-default btn-mt"><i class="icon  icon-file-pdf-o"></i> Mock Test IV</button></a>
<style>
.B, .answer-sheet{
   display:none !important;
}
.Q a{
   pointer-events: none;
   cursor: default;
}
</style>
<h1>Design Patterns Mock Test I </h1>
<div class="QA">
<div class="Q" id="Q1">
<p><span>Q 1</span> - Which of the following is true about design patterns?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - Design patterns represent the best practices used by experienced object-oriented software developers.</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Design patterns are solutions to general problems that software developers faced during software development.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Design patterns are obtained by trial and error by numerous software developers over quite a substantial period of time.</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - All of the above.</a></p>
</div>
<div class="A" id="A1">
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>Design patterns represent the best practices used by experienced object-oriented software developers. Design patterns are solutions to general problems that software developers faced during software development. These solutions were obtained by trial and error by numerous software developers over quite a substantial period of time.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('1')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q2">
<p><span>Q 2</span> - What is Gang of Four (GOF)?</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - Four authors of Book 'Design Patterns - Elements of Reusable Object-Oriented Software' are known as Gang of Four (GOF).</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Gang of Four (GOF) is a name of a book on Design Patterns.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Gang of Four (GOF) is a Design Pattern.</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - None of the above.</a></p>
</div>
<div class="A" id="A2">
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>In 1994, four authors Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides published a book titled Design Patterns - Elements of Reusable Object-Oriented Software which initiated the concept of Design Pattern in Software development. These authors are collectively known as Gang of Four (GOF). </p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('2')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q3">
<p><span>Q 3</span> - Which of the following is correct list of classifications of design patterns.</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - Creational, Structural and Behavioral patterns.</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Executional, Structural and Behavioral patterns.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Creational, Executional and Behavioral patterns.</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - None of the above.</a></p>
</div>
<div class="A" id="A3">
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>Design patterns can be classified in three categories: Creational, Structural and Behavioral patterns.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('3')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q4">
<p><span>Q 4</span> - Which of the following is correct about Creational design patterns.</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - These design patterns are specifically concerned with communication between objects.</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - These design patterns provide a way to create objects while hiding the creation logic, rather than instantiating objects directly using new opreator.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - These design patterns concern class and object composition. Concept of inheritance is used to compose interfaces and define ways to compose objects to obtain new functionalities.</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - None of the above.</a></p>
</div>
<div class="A" id="A4">
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>Creational design patterns provide a way to create objects while hiding the creation logic, rather than instantiating objects directly using new opreator.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('4')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q5">
<p><span>Q 5</span> - Which of the following is correct about Structural design patterns.</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - These design patterns are specifically concerned with communication between objects.</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - These design patterns provide a way to create objects while hiding the creation logic, rather than instantiating objects directly using new opreator.</a></p>
<p><a class="true" href="javascript:void(0);"><span>C</span> - These design patterns concern class and object composition. Concept of inheritance is used to compose interfaces and define ways to compose objects to obtain new functionalities.</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - None of the above.</a></p>
</div>
<div class="A" id="A5">
<h3>Answer : C</h3>
<h3>Explanation</h3>
<p>Structural design patterns concern class and object composition. Concept of inheritance is used to compose interfaces and define ways to compose objects to obtain new functionalities.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('5')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q6">
<p><span>Q 6</span> - Which of the following is correct about Behavioral design patterns.</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - These design patterns are specifically concerned with communication between objects.</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - These design patterns provide a way to create objects while hiding the creation logic, rather than instantiating objects directly using new opreator.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - These design patterns concern class and object composition. Concept of inheritance is used to compose interfaces and define ways to compose objects to obtain new functionalities.</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - None of the above.</a></p>
</div>
<div class="A" id="A6">
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>Behavioral design patterns are specifically concerned with communication between objects.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('6')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q7">
<p><span>Q 7</span> - Which of the following is correct about Factory design pattern.</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - This type of design pattern comes under creational pattern.</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Factory pattern creates object without exposing the creation logic to the client.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Factory pattern refers to newly created object using a common interface.</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - All of the above.</a></p>
</div>
<div class="A" id="A7">
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>Factory pattern is one of most used design pattern in Java. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object. In Factory pattern, we create object without exposing the creation logic to the client and refer to newly created object using a common interface.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('7')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q8">
<p><span>Q 8</span> - Which of the following is correct about Abstract Factory design pattern.</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - This type of design pattern comes under creational pattern.</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Abstract Factory patterns work around a super-factory which creates other factories.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - In Abstract Factory pattern an interface is responsible for creating a factory of related objects without explicitly specifying their classes.</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - All of the above.</a></p>
</div>
<div class="A" id="A8">
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>Abstract Factory patterns work around a super-factory which creates other factories. This factory is also called as factory of factories. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object. In Abstract Factory pattern an interface is responsible for creating a factory of related objects without explicitly specifying their classes. Each generated factory can give the objects as per the Factory pattern.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('8')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q9">
<p><span>Q 9</span> - Which of the following is correct about Singleton design pattern.</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - This type of design pattern comes under creational pattern.</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - This pattern involves a single class which is responsible to create an object while making sure that only single object gets created.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Singleton class provides a way to access its only object which can be accessed directly without need to instantiate the object of the class.</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - All of the above.</a></p>
</div>
<div class="A" id="A9">
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>Singleton pattern is one of the simplest design patterns in Java. This type of design pattern comes under creational pattern as this pattern provides one of the best ways to create an object.This pattern involves a single class which is responsible to create an object while making sure that only single object gets created. This class provides a way to access its only object which can be accessed directly without need to instantiate the object of the class.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('9')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q10">
<p><span>Q 10</span> - Can we create a clone of a singleton object?</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - true</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - false</a></p>
</div>
<div class="A" id="A10">
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>true. It is possible to get a clone of singleton object.  Throw exception within the body of clone() method to prevent cloning.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('10')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q11">
<p><span>Q 11</span> - If we serialize a singleton object and deserialize it then the result object will be same.</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - true</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - false</a></p>
</div>
<div class="A" id="A11">
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>false. Deserializing a serialized object will yield a different object.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('11')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q12">
<p><span>Q 12</span> - Integer class is an example of Decorator pattern.</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - true</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - false</a></p>
</div>
<div class="A" id="A12">
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>true. Wrapper classes like Integer, Boolean uses Decorator pattern.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('12')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q13">
<p><span>Q 13</span> - Runtime class is an example of singleton.</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - true</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - false</a></p>
</div>
<div class="A" id="A13">
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>true. Each java application uses Runtime as a single object.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('13')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q14">
<p><span>Q 14</span> - Integer.valueOf is an example of Factory pattern.</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - false</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - true</a></p>
</div>
<div class="A" id="A14">
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>true. Integer.valueOf() returns a Integer instance representing the specified int value.</p>
</div>
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('14')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q15">
<p><span>Q 15</span> - Event handling frameworks like swing, awt use Observer Pattern.</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - false</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - true</a></p>
</div>
<div class="A" id="A15">
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>true. Event handling frameworks like swing, awt use Observer Pattern.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('15')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q16">
<p><span>Q 16</span> - Which of the following describes the Builder pattern correctly?</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - This pattern builds a complex object using simple objects and using a step by step approach.</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - This pattern refers to creating duplicate object while keeping performance in mind.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - This pattern is used when creation of object directly is costly.</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - This pattern is used when we need to decouple an abstraction from its implementation so that the two can vary independently.</a></p>
</div>
<div class="A" id="A16">
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>Builder pattern builds a complex object using simple objects and using a step by step approach. This builder is independent of other objects.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('16')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q17">
<p><span>Q 17</span> - Which of the following describes the Bridge pattern correctly?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - This pattern builds a complex object using simple objects and using a step by step approach.</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - This pattern refers to creating duplicate object while keeping performance in mind.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - This pattern is used when creation of object directly is costly.</a></p>
<p><a class="true" href="javascript:void(0);"><span>D</span> - This pattern is used when we need to decouple an abstraction from its implementation so that the two can vary independently.</a></p>
</div>
<div class="A" id="A17">
<h3>Answer : D</h3>
<h3>Explanation</h3>
<p>Bridge pattern is used when we need to decouple an abstraction from its implementation so that the two can vary independently.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('17')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q18">
<p><span>Q 18</span> - Which of the following describes the Prototype pattern correctly?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - This pattern builds a complex object using simple objects and using a step by step approach.</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - This pattern refers to creating duplicate object while keeping performance in mind.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - This pattern works as a bridge between two incompatible interfaces. </a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - This pattern is used when we need to decouple an abstraction from its implementation so that the two can vary independently.</a></p>
</div>
<div class="A" id="A18">
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>Prototype pattern refers to creating duplicate object while keeping performance in mind.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('18')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q19">
<p><span>Q 19</span> - Which of the following describes the Adapter pattern correctly?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - This pattern builds a complex object using simple objects and using a step by step approach.</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - This pattern refers to creating duplicate object while keeping performance in mind.</a></p>
<p><a class="true" href="javascript:void(0);"><span>C</span> - This pattern works as a bridge between two incompatible interfaces. </a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - This pattern is used when we need to decouple an abstraction from its implementation so that the two can vary independently.</a></p>
</div>
<div class="A" id="A19">
<h3>Answer : C</h3>
<h3>Explanation</h3>
<p>Adapter pattern works as a bridge between two incompatible interfaces. This pattern involves a single class which is responsible to join functionalities of independent or incompatible interfaces.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('19')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q20">
<p><span>Q 20</span> - Which of the following describes the Filter pattern correctly?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - This pattern builds a complex object using simple objects and using a step by step approach.</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - This pattern refers to creating duplicate object while keeping performance in mind.</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - This pattern enables developers to filter a set of objects using different criteria and chaining them in a decoupled way through logical operations.</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - This pattern is used when we need to decouple an abstraction from its implementation so that the two can vary independently.</a></p>
</div>
<div class="A" id="A20">
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>Filter pattern or Criteria pattern is a design pattern that enables developers to filter a set of objects using different criteria and chaining them in a decoupled way through logical operations.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('20')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q21">
<p><span>Q 21</span> - Which of the following pattern builds a complex object using simple objects and using a step by step approach?</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - Builder Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Bridge Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Adapter Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - Filter Pattern</a></p>
</div>
<div class="A" id="A21">
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>Builder Pattern builds a complex object using simple objects and using a step by step approach. This builder is independent of other objects.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('21')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q22">
<p><span>Q 22</span> - Which of the following pattern refers to creating duplicate object while keeping performance in mind?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - Builder Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Bridge Pattern</a></p>
<p><a class="true" href="javascript:void(0);"><span>C</span> - Prototype Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - Filter Pattern</a></p>
</div>
<div class="A" id="A22">
<h3>Answer : C</h3>
<h3>Explanation</h3>
<p>Prototype pattern refers to creating duplicate object while keeping performance in mind.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('22')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q23">
<p><span>Q 23</span> - Which of the following pattern works as a bridge between two incompatible interfaces?</p>
<p><a class="false" href="javascript:void(0);"><span>A</span> - Builder Pattern</a></p>
<p><a class="true" href="javascript:void(0);"><span>B</span> - Adapter Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Prototype Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - Filter Pattern</a></p>
</div>
<div class="A" id="A23">
<h3>Answer : B</h3>
<h3>Explanation</h3>
<p>Adapter pattern works as a bridge between two incompatible interfaces. This pattern involves a single class which is responsible to join functionalities of independent or incompatible interfaces.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('23')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q24">
<p><span>Q 24</span> - Which of the following pattern is used when we need to decouple an abstraction from its implementation so that the two can vary independently?</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - Bridge Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Adapter Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Prototype Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - Filter Pattern</a></p>
</div>
<div class="A" id="A24">
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>Bridge pattern is used when we need to decouple an abstraction from its implementation so that the two can vary independently.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('24')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
<div class="QA">
<div class="Q" id="Q25">
<p><span>Q 25</span> - Which of the following pattern is used when creation of object directly is costly?</p>
<p><a class="true" href="javascript:void(0);"><span>A</span> - Bridge Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>B</span> - Adapter Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>C</span> - Prototype Pattern</a></p>
<p><a class="false" href="javascript:void(0);"><span>D</span> - Filter Pattern</a></p>
</div>
<div class="A" id="A25">
<h3>Answer : A</h3>
<h3>Explanation</h3>
<p>Prototype pattern is used when creation of object directly is costly.</p>
</div> 
<div class="B">
<button type="button" class="btn btn-default btn-xsm" onclick="javascript:showAnswer('25')"><i class="icon  icon-sort"></i> <span>Show Answer</span></button>
</div>
</div>
   <h1 class="answer-sheet">Answer Sheet</h1>
   <table class="table table-bordered answer-sheet" style="border:2px solid #000; width:100%">
   <tr>
   <th>Question Number</th>
   <th>Answer Key</th>
   </tr>      <tr>
      <td>1</td>
      <td>D</td>
      </tr>      <tr>
      <td>2</td>
      <td>A</td>
      </tr>      <tr>
      <td>3</td>
      <td>A</td>
      </tr>      <tr>
      <td>4</td>
      <td>B</td>
      </tr>      <tr>
      <td>5</td>
      <td>C</td>
      </tr>      <tr>
      <td>6</td>
      <td>A</td>
      </tr>      <tr>
      <td>7</td>
      <td>D</td>
      </tr>      <tr>
      <td>8</td>
      <td>D</td>
      </tr>      <tr>
      <td>9</td>
      <td>D</td>
      </tr>      <tr>
      <td>10</td>
      <td>A</td>
      </tr>      <tr>
      <td>11</td>
      <td>B</td>
      </tr>      <tr>
      <td>12</td>
      <td>A</td>
      </tr>      <tr>
      <td>13</td>
      <td>A</td>
      </tr>      <tr>
      <td>14</td>
      <td>B</td>
      </tr>      <tr>
      <td>15</td>
      <td>B</td>
      </tr>      <tr>
      <td>16</td>
      <td>A</td>
      </tr>      <tr>
      <td>17</td>
      <td>D</td>
      </tr>      <tr>
      <td>18</td>
      <td>B</td>
      </tr>      <tr>
      <td>19</td>
      <td>C</td>
      </tr>      <tr>
      <td>20</td>
      <td>B</td>
      </tr>      <tr>
      <td>21</td>
      <td>A</td>
      </tr>      <tr>
      <td>22</td>
      <td>C</td>
      </tr>      <tr>
      <td>23</td>
      <td>B</td>
      </tr>      <tr>
      <td>24</td>
      <td>A</td>
      </tr>      <tr>
      <td>25</td>
      <td>A</td>
      </tr></table><hr />
<div class="pre-btn">
<a href="/design_pattern/design_pattern_questions_answers.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="middle-btn">
<a target="_blank" href="/design_pattern/pdf/design_pattern_mock_test_i.pdf"><i class="fa fa-download"></i> Download</a>
</div>
<div class="nxt-btn">
<a href="/design_pattern/design_pattern_questions_answers.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<script type="text/javascript" src="/theme/js/exams.js"></script>
<div class="parent-file">design_pattern_questions_answers.htm</div>
<hr />
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div class="bottomadtag">Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>
<div class="row">
<div class="col-md-3" id="rightbar">
<div class="simple-ad">
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/design_pattern/design_pattern_mock_test.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/facebookIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/design_pattern/design_pattern_mock_test.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/twitterIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/design_pattern/design_pattern_mock_test.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/linkedinIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/design_pattern/design_pattern_mock_test.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/googlePlusIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/design_pattern/design_pattern_mock_test.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/StumbleUponIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/design_pattern/design_pattern_mock_test.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;">
<img src="/images/reddit.jpg" alt="img" />
</a>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 600;
google_ad_format = "300x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "ca-pub-2537027957187252";
/* Right Side Ad */
google_ad_slot = "right_side_ad";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="footer-copyright">
<div class="container">
<div class="row">
<div class="col-md-1">
<a href="index.htm" class="logo"> <img alt="Tutorials Point" class="img-responsive" src="/scripts/img/logo-footer.png"> </a>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <nav id="sub-menu">
      <ul>
         <li><a href="/about/faq.htm">FAQ's</a></li>
         <li><a href="/about/about_privacy.htm#cookies">Cookies Policy</a></li>
         <li><a href="/about/contact_us.htm">Contact</a></li>
      </ul>
   </nav>
</div>
<div class="col-md-3 col-sm-12 col-xs-12">
<p>&copy; Copyright 2018. All Rights Reserved.</p>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <div class="news-group">
      <input type="text" class="form-control-foot search" name="textemail" id="textemail" autocomplete="off" placeholder="Enter email for newsletter" onfocus="if (this.value == 'Enter email for newsletter...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Enter email for newsletter...';}">
      <span class="input-group-btn"> <button class="btn btn-default btn-footer" id="btnemail" type="submit" onclick="javascript:void(0);">go</button> </span>
      <div id="newsresponse"></div>
   </div>
</div>
</div>
</div>
</div>
</div>
<!-- Libs -->
<script src="/theme/js/custom-min.js?v=7"></script>
<script src="https://www.google-analytics.com/urchin.js">
</script>
<script>
_uacct = "UA-232293-6";
urchinTracker();
$('.pg-icon').click(function(){
   $('.wrapLoader').show();
});
</script>
</div>
</body>
</html>
