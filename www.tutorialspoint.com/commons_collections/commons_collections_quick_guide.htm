<!DOCTYPE html>
<!--[if IE 8]><html class="ie ie8"> <![endif]-->
<!--[if IE 9]><html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->	<html> <!--<![endif]-->
<head>
<meta charset="utf-8">
<title>Apache Commons Collections Quick Guide</title>
<meta name="description" content="Apache Commons Collections Quick Guide - Learn Apache Commons Collections in simple and easy steps starting from basic to advanced concepts with examples including Overview, Environment Setup, Bag, BidiMap, MapIterator, OrderedMap, Ignore Null, Merge and Sort, Transforming, Filtering Objects, Safe Empty Checks, Inclusion, Intersection, Subtraction, Union." />
<meta name="keywords" content="Apache Commons Collections, Tutorial, Learning, Overview, Environment Setup, Bag, BidiMap, MapIterator, OrderedMap, Ignore Null, Merge and Sort, Transforming, Filtering Objects, Safe Empty Checks, Inclusion, Intersection, Subtraction, Union." />
<base href="https://www.tutorialspoint.com/" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="website" />
<meta property="fb:app_id" content="471319149685276" />
<meta property="og:site_name" content="www.tutorialspoint.com" />
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="author" content="tutorialspoint.com">
<script type="text/javascript" src="https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2"></script>
<link rel="stylesheet" href="https://www.tutorialspoint.com/theme/css/style-min.css?v=3">
<script>
function openNav() {	
  document.getElementById("mySidenav").style.width = "250px";
  document.getElementById("right_obs").style.display = "block";
}
function closeNav() {
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
function close_obs_sidenav(){
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
</script>
<!-- Head Libs -->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="/theme/css/ie8.css">
<![endif]-->
<style>
select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }
.btnsbmt{ background: #a9215a !important;}
ul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #a9215a url(/images/pattern.png) repeat center center !important;}
.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #a9215a !important;}
.submenu-item{ border-bottom: 2px solid #a9215a !important; border-top: 2px solid #a9215a !important }
.ace_scroller{overflow: auto!important;}
a.demo{font-family: "Open Sans",Arial,sans-serif; background:#a9215a; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}
a.demo:hover{opacity:.8}
</style>
<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>
</head>
<body onload="prettyPrint()">
<div class="wrapLoader">
   <div class="imgLoader">
      <img  src="/images/loading-cg.gif" alt="" width="70" height="70" />
   </div>
</div>
<div id="right_obs" class="display-none" onclick="close_obs_sidenav()"></div>
<header>
   <div class="container">			
      <h1 class="logo">
      <a href="index.htm" title="tutorialspoint">
      <img alt="tutorialspoint" src="/commons_collections/images/logo.png">
      </a>
      </h1>			
      <ul class="tp-inline-block pull-right" id="tp-head-icons">
        <li>
           <div class="tp-second-nav tp-display-none tp-pointer" onclick="openNav()">
              <i class="fa fa-th-large fa-lg"></i>
           </div>
        </li>
     </ul>
     <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull" style="top: 24px!important"> <i class="icon icon-bars"></i> </button>
      <nav>
         <ul class="nav nav-pills nav-top">
            <li><a href="/about/about_careers.htm" style="background: #fffb09; font-weight: bold;"><i class="icon icon-suitcase"></i> Jobs</a></li>
            <li> <a target="_blank" href="/programming_examples/"><i class="fa fa-cubes"></i> &nbsp;Examples</a> </li>
            <li> <a href="https://www.tutorialspoint.com/whiteboard.htm"><img src="theme/css/icons/image-editor.png" alt="Whiteboard" title="Whiteboard"> &nbsp;Whiteboard</a> </li>
            <li> <a href="https://www.tutorialspoint.com/netmeeting.php"><i class="fa-camera"></i> &nbsp;Net Meeting</a> </li>
            <li> <a href="/online_dev_tools.htm"> <i class="dev-tools-menu" style="opacity:.5"></i> Tools </a> </li>
            <li> <a href="/articles/index.php"><i class="icon icon-file-text-o"></i> &nbsp;Articles</a> </li>            
            <li class="top-icons">
              <ul class="social-icons">
              <li class="facebook"><a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook">Facebook</a></li>
              <li class="googleplus"><a href="https://plus.google.com/u/0/116678774017490391259/posts" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Google+">Google+</a></li>
              <li class="twitter"><a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter">Twitter</a></li>
              <li class="linkedin"><a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin">Linkedin</a></li>
              <li class="youtube"><a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube">YouTube</a></li>
              </ul>
           </li>
         </ul>
      </nav>
    </div>
     <div class="sidenav" id="mySidenav">
     <div class="navbar nav-main">
      <div class="container">
         <nav class="nav-main mega-menu">
            <ul class="nav nav-pills nav-main" id="mainMenu">
               <li class="dropdown no-sub-menu"> <a class="dropdown" href="index.htm"><i class="icon icon-home"></i> Home</a> </li>   
               <li class="dropdown no-sub-menu"><a class="dropdown" href="/questions/index.php"><i class="fa fa-send"></i> Q/A </a> </li>
               <li class="dropdown"><a class="dropdown" href="tutorialslibrary.htm"><span class="tut-lib"> Library </span></a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="videotutorials/index.htm"><i class="fa-toggle-right"></i> Videos </a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="tutor_connect/index.php"><i class="fa-user"> </i> Tutors</a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="codingground.htm"><i class="fa-code"></i> Coding Ground </a> </li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://store.tutorialspoint.com/"><i class="fa-usd"></i> Store </a> </li>
               <li class="dropdown no-sub-menu">
                  <div class="searchform-popup">
                     <input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
                     <div class="magnifying-glass"><i class="icon-search"></i> Search </div>
                 </div>
               </li>
            </ul>
         </nav>
        </div>
      </div>	
     </div>	
   </div>	
</header>
<div style="clear:both;"></div>
<div role="main" class="main">
<div class="container">
<div class="row">
<div class="col-md-2">
<aside class="sidebar">
<style>
.ts {
   text-align:center !important;
   vertical-align:middle !important;
}
</style>
<div class="mini-logo">
<img src="/commons_collections/images/apache-commons-collections-mini-logo.jpg" alt="Apache Commons Collections Tutorial" />
</div>
<ul class="nav nav-list primary left-menu">
<li class="heading">Apache Commons Collections</li>
<li><a href="/commons_collections/index.htm">Commons Collections - Home</a></li>
<li><a href="/commons_collections/commons_collections_overview.htm">Commons Collections - Overview</a></li>
<li><a href="/commons_collections/commons_collections_environment.htm">Environment Setup</a></li>
<li><a href="/commons_collections/commons_collections_bag.htm">Commons Collections - Bag</a></li>
<li><a href="/commons_collections/commons_collections_bidimap.htm">Commons Collections - BidiMap</a></li>
<li><a href="/commons_collections/commons_collections_mapiterator.htm">Commons Collections - MapIterator</a></li>
<li><a href="/commons_collections/commons_collections_orderedmap.htm">Commons Collections - OrderedMap</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">CollectionUtils Class Examples</li>
<li><a href="/commons_collections/commons_collections_ignore_null.htm">Commons Collections - Ignore NULL</a></li>
<li><a href="/commons_collections/commons_collections_merge_sort.htm">Merge &amp; Sort</a></li>
<li><a href="/commons_collections/commons_collections_transforming_objects.htm">Transforming Objects</a></li>
<li><a href="/commons_collections/commons_collections_filtering_objects.htm">Filtering Objects</a></li>
<li><a href="/commons_collections/commons_collections_safe_checks.htm">Safe Empty Checks</a></li>
<li><a href="/commons_collections/commons_collections_inclusion.htm">Commons Collections - Inclusion</a></li>
<li><a href="/commons_collections/commons_collections_intersection.htm">Commons Collections - Intersection</a></li>
<li><a href="/commons_collections/commons_collections_subtraction.htm">Commons Collections - Subtraction</a></li>
<li><a href="/commons_collections/commons_collections_union.htm">Commons Collections - Union</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">Commons Collections Resources</li>
<li><a href="/commons_collections/commons_collections_quick_guide.htm">Commons Collections - Quick Guide</a></li>
<li><a href="/commons_collections/commons_collections_useful_resources.htm">Commons Collections - Resources</a></li>
<li><a href="/commons_collections/commons_collections_discussion.htm">Commons Collections - Discussion</a></li>
</ul>
<ul class="nav nav-list primary push-bottom left-menu special">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
 </aside>
</div>
<!-- PRINTING STARTS HERE -->
<div class="row">
<div class="content">
<div class="col-md-7 middle-col">
<h1>Apache Commons Collections - Quick Guide</h1>
<hr />
<div style="padding-bottom:5px;padding-left:10px;text-align: center;">Advertisements</div>
<div style="text-align: center;">
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="https://pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="/commons_collections/commons_collections_union.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/commons_collections/commons_collections_useful_resources.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<div class="clearer"></div>
<hr />
<h1>Apache Commons Collections - Overview</h1>
<p>Commons Collections augments Java Collections Framework. It provides several features to make collection handling easy. It provides many new interfaces, implementations and utilities. Main features of Commons Collections are following &minus;</p>
<ul class="list">
<li><p><b>Bag</b> &minus; Bag interfaces simplifies the collections which have multiple number of copies of each object.</p></li>
<li><p><b>BidiMap</b> &minus; BidiMap interfaces provide Bi-Directional maps which can be used to lookup values using keys or keys using values.</p></li>
<li><p><b>MapIterator</b> &minus; MapIterator interface provide simple and easy iteration over maps.</p></li>
<li><p><b>Transforming Decorators</b> &minus; Transforming decorators can alter every object of a collection as and when it is added to the collection.</p></li>
<li><p><b>Composite Collections</b> &minus; Composite collections are used where multiple collections are required to be handled uniformly.</p></li>
<li><p><b>Ordered Map</b> &minus; Ordered Maps retain the order in which elements are added in.</p></li>
<li><p><b>Ordered Set</b> &minus; Ordered Sets retain the order in which elements are added in.</p></li>
<li><p><b>Reference map</b> &minus; Reference map allows key/values to be garbage collected under close control.</p></li>
<li><p><b>Comparator implementations</b> &minus; Many Comparator implementations are available.</p></li>
<li><p><b>Iterator implementations</b> &minus; Many Iterator implementations are available.</p></li>
<li><p><b>Adapter Classes</b> &minus; Adapter classes are available to convert array and enumerations to collections.</p></li>
<li><p><b>Utilities</b> &minus; Utilities are available to test test or create typical set-theory properties of collections such as union, intersection. Supports Closure.</p></li>
</ul>
<h1>Commons Collections - Environment Setup</h1>
<h2>Local Environment Setup</h2>
<p>If you are still willing to set up your environment for Java programming language, then this section guides you on how to download and set up Java on your machine. Please follow the steps mentioned below to set up the environment.</p>
<p>Java SE is freely available from the link <a rel="nofollow" href="https://java.sun.com/javase/downloads/index_jdk5.jsp" target="_blank">Download Java</a>. So you download a version based on your operating system.</p>
<p>Follow the instructions to download Java and run the <b>.exe</b> to install Java on your machine. Once you have installed Java on your machine, you would need to set environment variables to point to correct installation directories &minus;</p>
<h2>Setting up the Path for Windows 2000/XP</h2>
<p>We are assuming that you have installed Java in <i>c:\Program Files\java\jdk</i> directory &minus;</p>
<ul class="list">
<li><p>Right-click on 'My Computer' and select 'Properties'.</p></li>
<li><p>Click on the 'Environment variables' button under the 'Advanced' tab.</p></li>
<li><p>Now, alter the 'Path' variable so that it also contains the path to the Java executable. Example, if the path is currently set to 'C:\WINDOWS\SYSTEM32', then change your path to read 'C:\WINDOWS\SYSTEM32;c:\Program Files\java\jdk\bin'.</p></li>
</ul>
<h2>Setting up the Path for Windows 95/98/ME</h2>
<p>We are assuming that you have installed Java in <i>c:\Program Files\java\jdk</i> directory &minus;</p>
<ul class="list">
<li><p>Edit the 'C:\autoexec.bat' file and add the following line at the end &minus; 'SET PATH=%PATH%;C:\Program Files\java\jdk\bin'</p></li>
</ul>
<h2>Setting up the Path for Linux, UNIX, Solaris, FreeBSD</h2>
<p>Environment variable PATH should be set to point to where the Java binaries have been installed. Refer to your shell documentation if you have trouble doing this.</p>
<p>Example, if you use bash as your shell, then you would add the following line to the end of your '.bashrc: export PATH=/path/to/java:$PATH'</p>
<h2>Popular Java Editors</h2>
<p>To write your Java programs, you need a text editor. There are many sophisticated IDEs available in the market. But for now, you can consider one of the following &minus;</p>
<ul class="list">
<li><p><b>Notepad</b> &minus; On Windows machine you can use any simple text editor like Notepad (Recommended for this tutorial), TextPad.</p></li>
<li><p><b>Netbeans</b> &minus; It is a Java IDE that is open-source and free which can be downloaded from <a rel="nofollow" href="https://www.netbeans.org/index.html" target="_blank">https://www.netbeans.org/index.html</a>.</p></li>
<li><p><b>Eclipse</b> &minus; It is also a Java IDE developed by the eclipse open-source community and can be downloaded from <a rel="nofollow" href="https://www.eclipse.org/" target="_blank">https://www.eclipse.org/</a>.</p></li>
</ul>
<h2>Download Common Collections Archive</h2>
<p>Download the latest version of Apache Common Collections jar file from <a rel="nofollow" target="_blank" rel="nofollow" href="https://commons.apache.org/proper/commons-collections/download_collections.cgi">commons-collections4-4.1-bin.zip</a>. At the time of writing this tutorial, we have downloaded <i>commons-collections4-4.1-bin.zip</i> and copied it into C:\>Apache folder.</p>
<table class="table table-bordered" style="text-align:center;">
<tr>
<th style="text-align:center;">OS</th> 
<th style="text-align:center;">Archive name</th>
</tr>
<tr>
<td>Windows</td>
<td>commons-collections4-4.1-bin.zip</td>
</tr>
<tr>
<td>Linux</td>
<td>commons-collections4-4.1-bin.tar.gz</td>
</tr>
<tr>
<td>Mac</td>
<td>commons-collections4-4.1-bin.tar.gz</td>
</tr>
</table>
<h2>Set Apache Common Collections Environment</h2>
<p>Set the <b>APACHE_HOME</b> environment variable to point to the base directory location where Apache jar is stored on your machine. Assuming, we've extracted commons-collections4-4.1-bin.zip in Apache folder on various Operating Systems as follows.</p>
<table class="table table-bordered" style="text-align:center;">
<tr>
<th style="text-align:center;">OS</th>
<th style="text-align:center;">Output</th>
</tr>
<tr>
<td>Windows</td>
<td>Set the environment variable APACHE_HOME to C:\Apache</td>
</tr>
<tr>
<td>Linux</td>
<td>export APACHE_HOME=/usr/local/Apache</td>
</tr>
<tr>
<td>Mac</td>
<td>export APACHE_HOME=/Library/Apache</td>
</tr>
</table>
<h2>Set CLASSPATH Variable</h2>
<p>Set the <b>CLASSPATH</b> environment variable to point to the Common Collections jar location. Assuming, you have stored commons-collections4-4.1-bin.zip in Apache folder on various Operating Systems as follows.</p>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">OS</th>
<th style="text-align:center;">Output</th>
</tr>
<tr>
<td class="ts">Windows</td>
<td>Set the environment variable CLASSPATH to %CLASSPATH%;%APACHE_HOME%\commons-collections4-4.1-bin.jar;.;</td>
</tr>
<tr>
<td class="ts">Linux</td>
<td>export CLASSPATH=$CLASSPATH:$APACHE_HOME/commons-collections4-4.1-bin.jar:.</td>
</tr>
<tr>
<td class="ts">Mac</td>
<td>export CLASSPATH=$CLASSPATH:$APACHE_HOME/commons-collections4-4.1-bin.jar:.</td>
</tr>
</table>
<h1>Apache Commons Collections - Bag Interface</h1>
<p>New Interfaces are added to supports bags. A Bag defines a collection which counts the number of times an object appears in the collection. For example, if a Bag contains {a, a, b, c} then getCount("a") will return 2 while uniqueSet() returns the unique values.</p>
<h2>Interface Declaration</h2>
<p>Following is the declaration for org.apache.commons.collections4.Bag&lt;E&gt; interface &minus;</p>
<pre class="prettyprint notranslate">
public interface Bag&lt;E&gt;
   extends Collection&lt;E&gt;
</pre>
<h2>Methods</h2>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Method &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>boolean add(E object)</b></p>
<p>(Violation) Adds one copy of the specified object to the Bag.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>boolean add(E object, int nCopies)</b></p>
<p>Adds nCopies copies of the specified object to the Bag.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>boolean containsAll(Collection&lt;?&gt; coll)</b></p>
<p>(Violation) Returns true if the bag contains all elements in the given collection, respecting cardinality.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>int getCount(Object object)</b></p>
<p>Returns the number of occurrences (cardinality) of the given object currently in the bag.</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>Iterator&lt;E&gt; iterator()</b></p>
<p>Returns an Iterator over the entire set of members, including copies due to cardinality.</p></td>
</tr>
<tr>
<td class="ts">6</td>
<td><p><b>boolean remove(Object object)</b></p>
<p>(Violation) Removes all occurrences of the given object from the bag.</p></td>
</tr>
<tr>
<td class="ts">7</td>
<td><p><b>boolean remove(Object object, int nCopies)</b></p>
<p>Removes nCopies copies of the specified object from the Bag.</p></td>
</tr>
<tr>
<td class="ts">8</td>
<td><p><b>boolean removeAll(Collection&lt;?&gt; coll)</b></p>
<p>(Violation) Remove all elements represented in the given collection, respecting cardinality.</p></td>
</tr>
<tr>
<td class="ts">9</td>
<td><p><b>boolean retainAll(Collection&lt;?&gt; coll)</b></p>
<p>(Violation) Remove any members of the bag that are not in the given collection, respecting cardinality.</p></td>
</tr>
<tr>
<td class="ts">10</td>
<td><p><b>int size()</b></p>
<p>Returns the total number of items in the bag across all types.</p></td>
</tr>
<tr>
<td class="ts">11</td>
<td><p><b>Set&lt;E&gt; uniqueSet()</b></p>
<p>Returns a Set of unique elements in the Bag.</p></td>
</tr>
</table>
<h2>Methods Inherited</h2>
<p>This interface inherits methods from the following interface &minus;</p>
<ul class="list">
<li>java.util.Collection</li>
</ul>
<h2>Example of Bag Interface</h2>
<p><i>BagTester.java</i></p>
<pre class="prettyprint notranslate">
import org.apache.commons.collections4.Bag;
import org.apache.commons.collections4.bag.HashBag;

public class BagTester {
   public static void main(String[] args) {
      Bag&lt;String&gt; bag = new HashBag&lt;&gt;();

      //add "a" two times to the bag.
      bag.add("a" , 2);
      
      //add "b" one time to the bag.
      bag.add("b");
      
      //add "c" one time to the bag.
      bag.add("c");
      
      //add "d" three times to the bag.
      bag.add("d",3);
      
      //get the count of "d" present in bag.
      System.out.println("d is present " + bag.getCount("d") + " times.");
      System.out.println("bag: " +bag);
      
      //get the set of unique values from the bag
      System.out.println("Unique Set: " +bag.uniqueSet());
      
      //remove 2 occurrences of "d" from the bag
      bag.remove("d",2);
      System.out.println("2 occurences of d removed from bag: " +bag);
      System.out.println("d is present " + bag.getCount("d") + " times.");
      System.out.println("bag: " +bag);
      System.out.println("Unique Set: " +bag.uniqueSet());
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
d is present 3 times.
bag: [2:a,1:b,1:c,3:d]
Unique Set: [a, b, c, d]
2 occurences of d removed from bag: [2:a,1:b,1:c,1:d]
d is present 1 times.
bag: [2:a,1:b,1:c,1:d]
Unique Set: [a, b, c, d]
</pre>
<h1>Commons Collections - BidiMap Interface</h1>
<p>New Interfaces are added to supports bidirectional Map. Using bidirectional map, a key can be lookup using value and value can be lookup using key easily.</p>
<h2>Interface Declaration</h2>
<p>Following is the declaration for org.apache.commons.collections4.BidiMap&lt;K,V&gt; interface &minus;</p>
<pre class="prettyprint notranslate">
public interface BidiMap&lt;K,V&gt;
   extends IterableMap&lt;K,V&gt;
</pre>
<h2>Methods</h2>
<table class="table table-bordered">
<tr>
<th style="text-align:center;">Sr.No.</th>
<th style="text-align:center;">Method &amp; Description</th>
</tr>
<tr>
<td class="ts">1</td>
<td><p><b>K getKey(Object value)</b></p>
<p>Gets the key that is currently mapped to the specified value.</p></td>
</tr>
<tr>
<td class="ts">2</td>
<td><p><b>BidiMap&lt;V,K&gt; inverseBidiMap()</b></p>
<p>Gets a view of this map where the keys and values are reversed.</p></td>
</tr>
<tr>
<td class="ts">3</td>
<td><p><b>V put(K key, V value)</b></p>
<p>Puts the key-value pair into the map, replacing any previous pair.</p></td>
</tr>
<tr>
<td class="ts">4</td>
<td><p><b>K removeValue(Object value)</b></p>
<p>Removes the key-value pair that is currently mapped to the specified value (optional operation).</p></td>
</tr>
<tr>
<td class="ts">5</td>
<td><p><b>Set&lt;V&gt; values()</b></p>
<p>Returns a Set view of the values contained in this map.</p></td>
</tr>
</table>
<h2>Methods Inherited</h2>
<p>This interface inherits methods from the following interfaces &minus;</p>
<ul class="list">
<li>org.apache.commons.collections4.Get</li>
<li>org.apache.commons.collections4.IterableGet</li>
<li>org.apache.commons.collections4.Put</li>
<li>java.util.Map</li>
</ul>
<h2>Example of BidiMap Interface</h2>
<p><i>BidiMapTester.java</i></p>
<pre class="prettyprint notranslate">
import org.apache.commons.collections4.BidiMap;
import org.apache.commons.collections4.bidimap.TreeBidiMap;

public class BidiMapTester {
   public static void main(String[] args) {
      BidiMap&lt;String, String&gt; bidi = new TreeBidiMap&lt;&gt;();

      bidi.put("One", "1");
      bidi.put("Two", "2");
      bidi.put("Three", "3");
      
      System.out.println(bidi.get("One")); 
      System.out.println(bidi.getKey("1"));
      System.out.println("Original Map: " + bidi);
      
      bidi.removeValue("1"); 
      System.out.println("Modified Map: " + bidi);
      BidiMap&lt;String, String&gt; inversedMap = bidi.inverseBidiMap();  
      System.out.println("Inversed Map: " + inversedMap);
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
1
One
Original Map: {One=1, Three=3, Two=2}
Modified Map: {Three=3, Two=2}
Inversed Map: {2=Two, 3=Three}
</pre>
<h1>Commons Collections - MapIterator Interface</h1>
<p>The JDK Map interface is pretty difficult to iterate as Iteration to be done on EntrySet or over the KeySet objects. MapIterator provides simple iteration over Map. Following example illustrates the same.</p>
<h2>Example of MapIterator Interface</h2>
<p><i>MapIteratorTester.java</i></p>
<pre class="prettyprint notranslate">
import org.apache.commons.collections4.IterableMap;
import org.apache.commons.collections4.MapIterator;
import org.apache.commons.collections4.map.HashedMap;

public class MapIteratorTester {
   public static void main(String[] args) {
      IterableMap&lt;String, String&gt; map = new HashedMap&lt;&gt;();

      map.put("1", "One");
      map.put("2", "Two");
      map.put("3", "Three");
      map.put("4", "Four");
      map.put("5", "Five");

      MapIterator&lt;String, String&gt; iterator = map.mapIterator();
      while (iterator.hasNext()) {
         Object key = iterator.next();
         Object value = iterator.getValue();

         System.out.println("key: " + key);
         System.out.println("Value: " + value);

         iterator.setValue(value + "_");
      }
      
      System.out.println(map);
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
key: 3
Value: Three
key: 5
Value: Five
key: 2
Value: Two
key: 4
Value: Four
key: 1
Value: One
{3=Three_, 5=Five_, 2=Two_, 4=Four_, 1=One_}
</pre>
<h1>OrderedMap Interface</h1>
<p>OrderedMap is a new interface for maps to retain the order in which elements are added. LinkedMap and ListOrderedMap are two available implementations. This interfaces supports iterator that of Map and allows iteration in both direction either forwards or backwards in a Map. Following example illustrates the same.</p>
<h2>Example of MapIterator Interface</h2>
<p><i>OrderedMapTester.java</i></p>
<pre class="prettyprint notranslate">
import org.apache.commons.collections4.OrderedMap;
import org.apache.commons.collections4.map.LinkedMap;

public class OrderedMapTester {
   public static void main(String[] args) {
      OrderedMap&lt;String, String&gt; map = new LinkedMap&lt;String, String&gt;();
      map.put("One", "1");
      map.put("Two", "2");
      map.put("Three", "3");
      
      System.out.println(map.firstKey());
      System.out.println(map.nextKey("One"));
      System.out.println(map.nextKey("Two"));  
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
One
Two
Three
</pre>
<h1>Apache Commons Collections - Ignore Null</h1>
<p>CollectionUtils class of Apache Commons Collections library provides various utility methods for common operations covering wide range of use cases. It helps avoid writing boilerplate code. This library is very useful prior to jdk 8 as similar functionalities are now provided in Java 8's Stream API.</p>
<h2>Check for Not Null Elements</h2>
<p>addIgnoreNull() method of CollectionUtils can be used to ensure that only non-null values are getting added to the collection.</p>
<h2>Declaration</h2>
<p>Following is the declaration for</p> 
<p><b>org.apache.commons.collections4.CollectionUtils.addIgnoreNull()</b> method &minus;</p>
<pre class="prettyprint notranslate">
public static &lt;T&gt; boolean addIgnoreNull(Collection&lt;T&gt; collection, T object)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>collection</b> &minus; The collection to add to, must not be null.</p></li>
<li><p><b>object</b> &minus; The object to add, if null it will not be added.</p></li>
</ul>
<h2>Return Value</h2>
<p>True if the collection changed.</p>
<h2>Exception</h2>
<ul class="list">
<li><p><b>NullPointerException</b> &minus; If the collection is null.</p></li>
</ul>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.addIgnoreNull() method. We're trying to add a null value and a sample non-null value.</p>
<pre class="prettyprint notranslate">
import java.util.LinkedList;
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;

public class CollectionUtilsTester {
   public static void main(String[] args) {
      List&lt;String&gt; list = new LinkedList&lt;String&gt;();

      CollectionUtils.addIgnoreNull(list, null);
      CollectionUtils.addIgnoreNull(list, "a");

      System.out.println(list);

      if(list.contains(null)) {
         System.out.println("Null value is present");
      } else {
         System.out.println("Null value is not present");
      }
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
[a]
Null value is not present
</pre>
<h1>Apache Commons Collections - Merge &amp; Sort</h1>
<p>CollectionUtils class of Apache Commons Collections library provides various utility methods for common operations covering wide range of use cases. It helps avoid writing boilerplate code. This library is very useful prior to jdk 8 as similar functionalities are now provided in Java 8's Stream API.</p>
<h2>Merging two sorted lists</h2>
<p>collate() method of CollectionUtils can be used to merge two already sorted lists.</p>
<h2>Declaration</h2>
<p>Following is the declaration for</p>
<p><b>org.apache.commons.collections4.CollectionUtils.collate()</b> method</p>
<pre class="prettyprint notranslate">
public static &lt;O extends Comparable&lt;? super O&gt;&gt; List&lt;O&gt; 
   collate(Iterable&lt;? extends O&gt; a, Iterable&lt;? extends O&gt; b)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>a</b> &minus; The first collection, must not be null.</p></li>
<li><p><b>b</b> &minus; The second collection, must not be null.</p></li>
</ul>
<h2>Return Value</h2>
<p>A new sorted List, containing the elements of Collection a and b.</p>
<h2>Exception</h2>
<ul class="list">
<li><p><b>NullPointerException</b> &minus; If either collection is null.</p></li>
</ul>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.collate() method. We'll merge two sorted lists and then print the merged and sorted list.</p>
<pre class="prettyprint notranslate">
import java.util.Arrays;
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;

public class CollectionUtilsTester {
   public static void main(String[] args) {
      List&lt;String&gt; sortedList1 = Arrays.asList("A","C","E");
      List&lt;String&gt; sortedList2 = Arrays.asList("B","D","F");
      List&lt;String&gt; mergedList = CollectionUtils.collate(sortedList1, sortedList2);
      System.out.println(mergedList); 
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
[A, B, C, D, E, F]
</pre>
<h1>Commons Collections - Transforming Objects</h1>
<p>CollectionUtils class of Apache Commons Collections library provides various utility methods for common operations covering wide range of use cases. It helps avoid writing boilerplate code. This library is very useful prior to jdk 8 as similar functionalities are now provided in Java 8's Stream API.</p>
<h2>Transforming a list</h2>
<p>collect() method of CollectionUtils can be used to transform a list of one type of objects to list of different type of objects.</p>
<h2>Declaration</h2>
<p>Following is the declaration for</p>
<p> <b>org.apache.commons.collections4.CollectionUtils.collect()</b> method</p>
<pre class="prettyprint notranslate">
public static &lt;I,O&gt; Collection&lt;O&gt; collect(Iterable&lt;I&gt; inputCollection, 
   Transformer&lt;? super I,? extends O&gt; transformer)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>inputCollection</b> &minus; The collection to get the input from, may not be null.</p></li>
<li><p><b>Transformer</b> &minus; The transformer to use, may be null.</p></li>
</ul>
<h2>Return Value</h2>
<p>The transformed result (new list).</p>
<h2>Exception</h2>
<ul class="list">
<li><p><b>NullPointerException</b> &minus; If the input collection is null.</p></li>
</ul>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.collect() method. We'll transform a list of string to list of integer by parsing the integer value from String.</p>
<pre class="prettyprint notranslate">
import java.util.Arrays;
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;
import org.apache.commons.collections4.Transformer;

public class CollectionUtilsTester {
   public static void main(String[] args) {
      List&lt;String&gt; stringList = Arrays.asList("1","2","3");

      List&lt;Integer&gt; integerList = (List&lt;Integer&gt;) CollectionUtils.collect(stringList, 
         new Transformer&lt;String, Integer&gt;() {
         
         @Override
         public Integer transform(String input) {
            return Integer.parseInt(input);
         }
      });

      System.out.println(integerList);
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
[1, 2, 3]
</pre>
<h1>Commons Collections - Filtering Objects</h1>
<p>CollectionUtils class of Apache Commons Collections library provides various utility methods for common operations covering wide range of use cases. It helps avoid writing boilerplate code. This library is very useful prior to jdk 8 as similar functionalities are now provided in Java 8's Stream API.</p>
<h2>Filtering a list using filter() method</h2>
<p>filter() method of CollectionUtils can be used to filter a list to remove objects which do not satisfy condition provided by predicate passed.</p>
<h2>Declaration</h2>
<p>Following is the declaration for</p> 
<p><b>org.apache.commons.collections4.CollectionUtils.filter()</b> method &minus;</p>
<pre class="prettyprint notranslate">
public static &lt;T&gt; boolean filter(Iterable&lt;T&gt; collection,
   Predicate&lt;? super T&gt; predicate)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>collection</b> &minus; The collection to get the input from, may not be null.</p></li>
<li><p><b>predicate</b> &minus; The predicate to use as a filter, may be null.</p></li>
</ul>
<h2>Return Value</h2>
<p>True if the collection is modified by this call, false otherwise.</p>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.filter() method. We'll filter a list of integer to get even numbers only.</p>
<pre class="prettyprint notranslate">
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;
import org.apache.commons.collections4.Predicate;

public class CollectionUtilsTester {
   public static void main(String[] args) {

      List&lt;Integer&gt; integerList = new ArrayList&lt;Integer&gt;();
      integerList.addAll(Arrays.asList(1,2,3,4,5,6,7,8));

      System.out.println("Original List: " + integerList);
      CollectionUtils.filter(integerList, new Predicate&lt;Integer&gt;() {
         
         @Override
         public boolean evaluate(Integer input) {
            if(input.intValue() % 2 == 0) {
               return true;
            }
            return false;
         }
      });
      
      System.out.println("Filtered List (Even numbers): " + integerList);
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
Original List: [1, 2, 3, 4, 5, 6, 7, 8]
Filtered List (Even numbers): [2, 4, 6, 8]
</pre>
<h2>Filtering a list using filterInverse() method</h2>
<p>filterInverse() method of CollectionUtils can be used to filter a list to remove objects which satisfy condition provided by predicate passed.</p>
<h2>Declaration</h2>
<p>Following is the declaration for </p>
<p><b>org.apache.commons.collections4.CollectionUtils.filterInverse()</b> method</p>
<pre class="prettyprint notranslate">
public static &lt;T&gt; boolean filterInverse(Iterable&lt;T&gt; collection,
   Predicate&lt;? super T&gt; predicate)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>collection</b> &minus; The collection to get the input from, may not be null.</p></li>
<li><p><b>predicate</b> &minus; The predicate to use as a filter, may be null.</p></li>
</ul>
<h2>Return Value</h2>
<p>True if the collection is modified by this call, false otherwise.</p>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.filterInverse() method. We'll filter a list of integer to get odd numbers only.</p>
<pre class="prettyprint notranslate">
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;
import org.apache.commons.collections4.Predicate;

public class CollectionUtilsTester {
   public static void main(String[] args) {

      List&lt;Integer&gt; integerList = new ArrayList&lt;Integer&gt;();
      integerList.addAll(Arrays.asList(1,2,3,4,5,6,7,8));

      System.out.println("Original List: " + integerList);
      CollectionUtils.filterInverse(integerList, new Predicate&lt;Integer&gt;() {
         
         @Override
         public boolean evaluate(Integer input) {
            if(input.intValue() % 2 == 0) {
               return true;
            }
            return false;
         }
      });
      
      System.out.println("Filtered List (Odd numbers): " + integerList);
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
Original List: [1, 2, 3, 4, 5, 6, 7, 8]
Filtered List (Odd numbers): [1, 3, 5, 7]
</pre>
<h1>Commons Collections - Safe Empty Checks</h1>
<p>CollectionUtils class of Apache Commons Collections library provides various utility methods for common operations covering wide range of use cases. It helps avoid writing boilerplate code. This library is very useful prior to jdk 8 as similar functionalities are now provided in Java 8's Stream API.</p>
<h2>Checking non-empty list</h2>
<p>isNotEmpty() method of CollectionUtils can be used to check if a list is not empty without worrying about null list. So null check is not required to be placed everywhere before checking the size of the list.</p>
<h2>Declaration</h2>
<p>Following is the declaration for</p>
<p><b>org.apache.commons.collections4.CollectionUtils.isNotEmpty()</b> method</p>
<pre class="prettyprint notranslate">
public static boolean isNotEmpty(Collection&lt;?&gt; coll)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>coll</b> &minus; The collection to check, may be null.</p></li>
</ul>
<h2>Return Value</h2>
<p>True if non-null and non-empty.</p>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.isNotEmpty() method. We'll check a list is empty or not.</p>
<pre class="prettyprint notranslate">
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;

public class CollectionUtilsTester {
   public static void main(String[] args) {
      List&lt;String&gt; list = getList();
      System.out.println("Non-Empty List Check: " + checkNotEmpty1(list));
      System.out.println("Non-Empty List Check: " + checkNotEmpty1(list));
   }

   static List&lt;String&gt; getList() {
      return null;
   } 
   
   static boolean checkNotEmpty1(List&lt;String&gt; list) {
      return !(list == null || list.isEmpty());
   }

   static boolean checkNotEmpty2(List&lt;String&gt; list) {
      return CollectionUtils.isNotEmpty(list);
   } 
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
Non-Empty List Check: false
Non-Empty List Check: false
</pre>
<h2>Checking empty list</h2>
<p>isEmpty() method of CollectionUtils can be used to check if a list is empty without worrying about null list. So null check is not required to be placed everywhere before checking the size of the list.</p>
<h2>Declaration</h2>
<p>Following is the declaration for</p> 
<p><b>org.apache.commons.collections4.CollectionUtils.isEmpty()</b> method &minus;</p>
<pre class="prettyprint notranslate">
public static boolean isEmpty(Collection&lt;?&gt; coll)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>coll</b> &minus; The collection to check, may be null.</p></li>
</ul>
<h2>Return Value</h2>
<p>True if empty or null.</p>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.isEmpty() method. We'll check a list is empty or not.</p>
<pre class="prettyprint notranslate">
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;

public class CollectionUtilsTester {
   public static void main(String[] args) {
      List&lt;String&gt; list = getList();
      System.out.println("Empty List Check: " + checkEmpty1(list));
      System.out.println("Empty List Check: " + checkEmpty1(list));
   }

   static List&lt;String&gt; getList() {
      return null;
   } 
   
   static boolean checkEmpty1(List&lt;String&gt; list) {
      return (list == null || list.isEmpty());
   }
   
   static boolean checkEmpty2(List&lt;String&gt; list) {
      return CollectionUtils.isEmpty(list);
   } 
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
Empty List Check: true
Empty List Check: true
</pre>
<h1>Apache Commons Collections - Inclusion</h1>
<p>CollectionUtils class of Apache Commons Collections library provides various utility methods for common operations covering wide range of use cases. It helps avoid writing boilerplate code. This library is very useful prior to jdk 8 as similar functionalities are now provided in Java 8's Stream API.</p>
<h2>Checking sublist</h2>
<p>isSubCollection() method of CollectionUtils can be used to check if a collection contains the given collection or not.</p>
<h2>Declaration</h2>
<p>Following is the declaration for </p>
<p><b>org.apache.commons.collections4.CollectionUtils.isSubCollection()</b> method &minus;</p>
<pre class="prettyprint notranslate">
public static boolean isSubCollection(Collection&lt;?&gt; a,
   Collection&lt;?&gt; b)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>a</b> &minus; The first (sub) collection, must not be null.</p></li>
<li><p><b>b</b> &minus; The second (super) collection, must not be null.</p></li>
</ul>
<h2>Return Value</h2>
<p>True if and only if a is a sub-collection of b.</p>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.isSubCollection() method. We'll check a list is part of another list or not.</p>
<pre class="prettyprint notranslate">
import java.util.Arrays;
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;

public class CollectionUtilsTester {
   public static void main(String[] args) {
      //checking inclusion
      List&lt;String&gt; list1 = Arrays.asList("A","A","A","C","B","B");
      List&lt;String&gt; list2 = Arrays.asList("A","A","B","B");

      System.out.println("List 1: " + list1);
      System.out.println("List 2: " + list2);
      System.out.println("Is List 2 contained in List 1: " 
         + CollectionUtils.isSubCollection(list2, list1));
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
List 1: [A, A, A, C, B, B]
List 2: [A, A, B, B]
Is List 2 contained in List 1: true
</pre>
<h1>Apache Commons Collections - Intersection</h1>
<p>CollectionUtils class of Apache Commons Collections library provides various utility methods for common operations covering wide range of use cases. It helps avoid writing boilerplate code. This library is very useful prior to jdk 8 as similar functionalities are now provided in Java 8's Stream API.</p>
<h2>Checking intersection</h2>
<p>intersection() method of CollectionUtils can be used to get the common objects between two collections(intersection).</p>
<h2>Declaration</h2>
<p>Following is the declaration for <b>org.apache.commons.collections4.CollectionUtils.intersection()</b> method</p>
<pre class="prettyprint notranslate">
public static &lt;O&gt; Collection&lt;O&gt; intersection(Iterable&lt;? extends O&gt; a,
   Iterable&lt;? extends O&gt; b)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>a</b> &minus; The first (sub) collection, must not be null.</p></li>
<li><p><b>b</b> &minus; The second (super) collection, must not be null.</p></li>
</ul>
<h2>Return Value</h2>
<p>The intersection of the two collections.</p>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.intersection() method. We'll get the intersection of two lists.</p>
<pre class="prettyprint notranslate">
import java.util.Arrays;
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;

public class CollectionUtilsTester {
   public static void main(String[] args) {
      //checking inclusion
      List&lt;String&gt; list1 = Arrays.asList("A","A","A","C","B","B");
      List&lt;String&gt; list2 = Arrays.asList("A","A","B","B");

      System.out.println("List 1: " + list1);
      System.out.println("List 2: " + list2);
      System.out.println("Commons Objects of List 1 and List 2: " 
         + CollectionUtils.intersection(list1, list2));
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
List 1: [A, A, A, C, B, B]
List 2: [A, A, B, B]
Commons Objects of List 1 and List 2: [A, A, B, B]
</pre>
<h1>Apache Commons Collections - Subtraction</h1>
<p>CollectionUtils class of Apache Commons Collections library provides various utility methods for common operations covering wide range of use cases. It helps avoid writing boilerplate code. This library is very useful prior to jdk 8 as similar functionalities are now provided in Java 8's Stream API.</p>
<h2>Checking Substraction</h2>
<p>subtract() method of CollectionUtils can be used to get the new collection by subtracting objects of one collection from other.</p>
<h2>Declaration</h2>
<p>Following is the declaration for <b>org.apache.commons.collections4.CollectionUtils.subtract()</b> method &minus;</p>
<pre class="prettyprint notranslate">
public static &lt;O&gt; Collection&lt;O&gt; subtract(Iterable&lt;? extends O&gt; a,
   Iterable&lt;? extends O&gt; b)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>a</b> &minus; The collection to subtract from, must not be null.</p></li>
<li><p><b>b</b> &minus; The collection to subtract, must not be null.</p></li>
</ul>
<h2>Return Value</h2>
<p>A new collection with the results.</p>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.subtract() method. We'll get the subtraction of two lists.</p>
<pre class="prettyprint notranslate">
import java.util.Arrays;
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;

public class CollectionUtilsTester {
   public static void main(String[] args) {
      //checking inclusion
      List&lt;String&gt; list1 = Arrays.asList("A","A","A","C","B","B");
      List&lt;String&gt; list2 = Arrays.asList("A","A","B","B");

      System.out.println("List 1: " + list1);
      System.out.println("List 2: " + list2);
      System.out.println("List 1 - List 2: " 
         + CollectionUtils.subtract(list1, list2));
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
List 1: [A, A, A, C, B, B]
List 2: [A, A, B, B]
List 1 - List 2: [A, C]
</pre>
<h1>Apache Commons Collections - Union</h1>
<p>CollectionUtils class of Apache Commons Collections library provides various utility methods for common operations covering wide range of use cases. It helps avoid writing boilerplate code. This library is very useful prior to jdk 8 as similar functionalities are now provided in Java 8's Stream API.</p>
<h2>Checking union</h2>
<p>union() method of CollectionUtils can be used to get the union of two collections.</p>
<h2>Declaration</h2>
<p>Following is the declaration for <b>org.apache.commons.collections4.CollectionUtils.union()</b> method</p>
<pre class="prettyprint notranslate">
public static &lt;O&gt; Collection&lt;O&gt; union(Iterable&lt;? extends O&gt; a,
   Iterable&lt;? extends O&gt; b)
</pre>
<h2>Parameters</h2>
<ul class="list">
<li><p><b>a</b> &minus; The first collection, must not be null.</p></li>
<li><p><b>b</b> &minus; The second collection, must not be null.</p></li>
</ul>
<h2>Return Value</h2>
<p>The union of the two collections.</p>
<h2>Example</h2>
<p>The following example shows the usage of org.apache.commons.collections4.CollectionUtils.union() method. We'll get the union of two lists.</p>
<pre class="prettyprint notranslate">
import java.util.Arrays;
import java.util.List;

import org.apache.commons.collections4.CollectionUtils;

public class CollectionUtilsTester {
   public static void main(String[] args) {
      //checking inclusion
      List&lt;String&gt; list1 = Arrays.asList("A","A","A","C","B","B");
      List&lt;String&gt; list2 = Arrays.asList("A","A","B","B");

      System.out.println("List 1: " + list1);
      System.out.println("List 2: " + list2);
      System.out.println("Union of List 1 and List 2: " 
         + CollectionUtils.union(list1, list2));
   }
}
</pre>
<h2>Output</h2>
<p>It will print the following result.</p>
<pre class="result notranslate">
List 1: [A, A, A, C, B, B]
List 2: [A, A, B, B]
Union of List 1 and List 2: [A, A, A, B, B, C]
</pre>
<hr />
<div class="pre-btn">
<a href="/commons_collections/commons_collections_union.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="print-btn center">
<a href="/cgi-bin/printpage.cgi" target="_blank"><i class="icon icon-print big-font"></i> Print</a>
</div>
<div class="nxt-btn">
<a href="/commons_collections/commons_collections_useful_resources.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<hr />
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div class="bottomadtag">Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>
<div class="row">
<div class="col-md-3" id="rightbar">
<div class="simple-ad">
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/commons_collections/commons_collections_quick_guide.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/facebookIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/commons_collections/commons_collections_quick_guide.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/twitterIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/commons_collections/commons_collections_quick_guide.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/linkedinIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/commons_collections/commons_collections_quick_guide.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/googlePlusIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/commons_collections/commons_collections_quick_guide.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/StumbleUponIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/commons_collections/commons_collections_quick_guide.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;">
<img src="/images/reddit.jpg" alt="img" />
</a>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 600;
google_ad_format = "300x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "ca-pub-2537027957187252";
/* Right Side Ad */
google_ad_slot = "right_side_ad";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="footer-copyright">
<div class="container">
<div class="row">
<div class="col-md-1">
<a href="index.htm" class="logo"> <img alt="Tutorials Point" class="img-responsive" src="/scripts/img/logo-footer.png"> </a>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <nav id="sub-menu">
      <ul>
         <li><a href="/about/faq.htm">FAQ's</a></li>
         <li><a href="/about/about_privacy.htm#cookies">Cookies Policy</a></li>
         <li><a href="/about/contact_us.htm">Contact</a></li>
      </ul>
   </nav>
</div>
<div class="col-md-3 col-sm-12 col-xs-12">
<p>&copy; Copyright 2018. All Rights Reserved.</p>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <div class="news-group">
      <input type="text" class="form-control-foot search" name="textemail" id="textemail" autocomplete="off" placeholder="Enter email for newsletter" onfocus="if (this.value == 'Enter email for newsletter...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Enter email for newsletter...';}">
      <span class="input-group-btn"> <button class="btn btn-default btn-footer" id="btnemail" type="submit" onclick="javascript:void(0);">go</button> </span>
      <div id="newsresponse"></div>
   </div>
</div>
</div>
</div>
</div>
</div>
<!-- Libs -->
<script src="/theme/js/custom-min.js?v=7"></script>
<script src="https://www.google-analytics.com/urchin.js">
</script>
<script>
_uacct = "UA-232293-6";
urchinTracker();
$('.pg-icon').click(function(){
   $('.wrapLoader').show();
});
</script>
</div>
</body>
</html>
