<!doctype html> 
<!--[if lt IE 7 ]> <html lang="en" class="no-js ie6"> <![endif]-->
<!--[if IE 7 ]> <html lang="en" class="no-js ie7"> <![endif]-->
<!--[if IE 8 ]> <html lang="en" class="no-js ie8"> <![endif]-->
<!--[if IE 9 ]> <html lang="en" class="no-js ie9"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--><html lang="en"><!--<![endif]-->
<head>
<meta charset="utf-8">
<title>Swift Functions</title>
<meta name="description" content="Swift Functions - Learn Swift in simple and easy steps starting from basic to advanced concepts with examples including overview, basic syntax, environment setup, data types, variables, optionals, constants, literals, operators, decision making, strings, characters, arrays, dictionaries, loops, control flow, functions, closures, enumerations, classes, structures, properties, methods, inheritance, initialization, deinitialization, ARC overview, optional chaining, type casting, automatic reference count, extensions, protocols, generics, access control etc." />
<meta name="keywords" content="Swift, Tutorial, beginners, overview, basic Syntax, environment setup, data types, variables, optionals, constants, literals, operators, decision making, strings, characters, arrays, dictionaries, loops, control flow, functions, closures, enumerations, classes, structures, properties, methods, inheritance, initialization, deinitialization, ARC overview, optional chaining, type casting, automatic reference count, extensions, protocols, generics, access control etc." />
<base href="https://www.tutorialspoint.com/" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="website" />
<meta property="fb:app_id" content="471319149685276" />
<meta property="og:site_name" content="www.tutorialspoint.com" />
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="author" content="tutorialspoint.com">
<script type="text/javascript" src="https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2"></script>
<link rel="stylesheet" href="https://www.tutorialspoint.com/theme/css/style-min.css?v=3">
<script>
function openNav() {	
  document.getElementById("mySidenav").style.width = "250px";
  document.getElementById("right_obs").style.display = "block";
}
function closeNav() {
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
function close_obs_sidenav(){
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
</script>
<!-- Head Libs -->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="/theme/css/ie8.css">
<![endif]-->
<style>
select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }
.btnsbmt{ background: #f05c02 !important;}
ul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #f05c02 url(/images/pattern.png) repeat center center !important;}
.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #f05c02 !important;}
.submenu-item{ border-bottom: 2px solid #f05c02 !important; border-top: 2px solid #f05c02 !important }
.ace_scroller{overflow: auto!important;}
a.demo{font-family: "Open Sans",Arial,sans-serif; background:#f05c02; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}
a.demo:hover{opacity:.8}
</style>
<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>
</head>
<body onload="prettyPrint()">
<div class="wrapLoader">
   <div class="imgLoader">
      <img  src="/images/loading-cg.gif" alt="" width="70" height="70" />
   </div>
</div>
<div id="right_obs" class="display-none" onclick="close_obs_sidenav()"></div>
<header>
   <div class="container">			
      <h1 class="logo">
      <a href="index.htm" title="tutorialspoint">
      <img alt="tutorialspoint" src="/swift/images/logo.png">
      </a>
      </h1>			
      <ul class="tp-inline-block pull-right" id="tp-head-icons">
        <li>
           <div class="tp-second-nav tp-display-none tp-pointer" onclick="openNav()">
              <i class="fa fa-th-large fa-lg"></i>
           </div>
        </li>
     </ul>
     <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull" style="top: 24px!important"> <i class="icon icon-bars"></i> </button>
      <nav>
         <ul class="nav nav-pills nav-top">
            <li><a href="/about/about_careers.htm" style="background: #fffb09; font-weight: bold;"><i class="icon icon-suitcase"></i> Jobs</a></li>
            <li> <a target="_blank" href="/programming_examples/"><i class="fa fa-cubes"></i> &nbsp;Examples</a> </li>
            <li> <a href="https://www.tutorialspoint.com/whiteboard.htm"><img src="theme/css/icons/image-editor.png" alt="Whiteboard" title="Whiteboard"> &nbsp;Whiteboard</a> </li>
            <li> <a href="https://www.tutorialspoint.com/netmeeting.php"><i class="fa-camera"></i> &nbsp;Net Meeting</a> </li>
            <li> <a href="/online_dev_tools.htm"> <i class="dev-tools-menu" style="opacity:.5"></i> Tools </a> </li>
            <li> <a href="/articles/index.php"><i class="icon icon-file-text-o"></i> &nbsp;Articles</a> </li>            
            <li class="top-icons">
              <ul class="social-icons">
              <li class="facebook"><a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook">Facebook</a></li>
              <li class="googleplus"><a href="https://plus.google.com/u/0/116678774017490391259/posts" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Google+">Google+</a></li>
              <li class="twitter"><a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter">Twitter</a></li>
              <li class="linkedin"><a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin">Linkedin</a></li>
              <li class="youtube"><a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube">YouTube</a></li>
              </ul>
           </li>
         </ul>
      </nav>
    </div>
     <div class="sidenav" id="mySidenav">
     <div class="navbar nav-main">
      <div class="container">
         <nav class="nav-main mega-menu">
            <ul class="nav nav-pills nav-main" id="mainMenu">
               <li class="dropdown no-sub-menu"> <a class="dropdown" href="index.htm"><i class="icon icon-home"></i> Home</a> </li>   
               <li class="dropdown no-sub-menu"><a class="dropdown" href="/questions/index.php"><i class="fa fa-send"></i> Q/A </a> </li>
               <li class="dropdown"><a class="dropdown" href="tutorialslibrary.htm"><span class="tut-lib"> Library </span></a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="videotutorials/index.htm"><i class="fa-toggle-right"></i> Videos </a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="tutor_connect/index.php"><i class="fa-user"> </i> Tutors</a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="codingground.htm"><i class="fa-code"></i> Coding Ground </a> </li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://store.tutorialspoint.com/"><i class="fa-usd"></i> Store </a> </li>
               <li class="dropdown no-sub-menu">
                  <div class="searchform-popup">
                     <input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
                     <div class="magnifying-glass"><i class="icon-search"></i> Search </div>
                 </div>
               </li>
            </ul>
         </nav>
        </div>
      </div>	
     </div>	
   </div>	
</header>
<div style="clear:both;"></div>
<div role="main" class="main">
<div class="container">
<div class="row">
<div class="col-md-2">
<aside class="sidebar">
<div class="mini-logo">
<img src="/swift/images/swift-mini-logo.jpg" alt="Swift Tutorial" />
</div>
<ul class="nav nav-list primary left-menu">
<li class="heading">Swift Tutorial</li>
<li><a href="/swift/index.htm">Swift - Home</a></li>
<li><a href="/swift/swift_overview.htm">Swift - Overview</a></li>
<li><a href="/swift/swift_environment.htm">Swift - Environment</a></li>
<li><a href="/swift/swift_basic_syntax.htm">Swift - Basic Syntax</a></li>
<li><a href="/swift/swift_data_types.htm">Swift - Data Types</a></li>
<li><a href="/swift/swift_variables.htm">Swift - Variables</a></li>
<li><a href="/swift/swift_optionals.htm">Swift - Optionals</a></li>
<li><a href="/swift/swift_tuples.htm">Swift - Tuples</a></li>
<li><a href="/swift/swift_constants.htm">Swift - Constants</a></li>
<li><a href="/swift/swift_literals.htm">Swift - Literals</a></li>
<li><a href="/swift/swift_operators.htm">Swift - Operators</a></li>
<li><a href="/swift/swift_decision_making.htm">Swift - Decision Making</a></li>
<li><a href="/swift/swift_loops.htm">Swift - Loops</a></li>
<li><a href="/swift/swift_strings.htm">Swift - Strings</a></li>
<li><a href="/swift/swift_characters.htm">Swift - Characters</a></li>
<li><a href="/swift/swift_arrays.htm">Swift - Arrays</a></li>
<li><a href="/swift/swift_sets.htm">Swift - Sets</a></li>
<li><a href="/swift/swift_dictionaries.htm">Swift - Dictionaries</a></li>
<li><a href="/swift/swift_functions.htm">Swift - Functions</a></li>
<li><a href="/swift/swift_closures.htm">Swift - Closures</a></li>
<li><a href="/swift/swift_enumerations.htm">Swift - Enumerations</a></li>
<li><a href="/swift/swift_structures.htm">Swift - Structures</a></li>
<li><a href="/swift/swift_classes.htm">Swift - Classes</a></li>
<li><a href="/swift/swift_properties.htm">Swift - Properties</a></li>
<li><a href="/swift/swift_methods.htm">Swift - Methods</a></li>
<li><a href="/swift/swift_subscripts.htm">Swift - Subscripts</a></li>
<li><a href="/swift/swift_inheritance.htm">Swift - Inheritance</a></li>
<li><a href="/swift/swift_initialization.htm">Swift - Initialization</a></li>
<li><a href="/swift/swift_deinitialization.htm">Swift - Deinitialization</a></li>
<li><a href="/swift/swift_arc_overview.htm">Swift - ARC Overview</a></li>
<li><a href="/swift/swift_optional_chaining.htm">Swift - Optional Chaining</a></li>
<li><a href="/swift/swift_type_casting.htm">Swift - Type Casting</a></li>
<li><a href="/swift/swift_extensions.htm">Swift - Extensions</a></li>
<li><a href="/swift/swift_protocols.htm">Swift - Protocols</a></li>
<li><a href="/swift/swift_generics.htm">Swift - Generics</a></li>
<li><a href="/swift/swift_access_control.htm">Swift - Access Control</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">Swift Useful Resources</li>
<li><a href="/swift/compile_swift_online.htm">Swift - Compile Online</a></li>
<li><a href="/swift/swift_quick_guide.htm">Swift - Quick Guide</a></li>
<li><a href="/swift/swift_useful_resources.htm">Swift - Useful Resources</a></li>
<li><a href="/swift/swift_discussion.htm">Swift - Discussion</a></li>
</ul>
<ul class="nav nav-list primary push-bottom left-menu special">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
</aside>
</div>
<!-- PRINTING STARTS HERE -->
<div class="row">
<div class="content">
<div class="col-md-7 middle-col">
<h1>Swift - Functions</h1>
<hr />
<hr />
<div style="padding-bottom:5px;padding-left:10px;text-align: center;">Advertisements</div>
<div style="text-align: center;">
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="https://pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="/swift/swift_dictionaries.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/swift/swift_closures.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<div class="clearer"></div>
<hr />
<p>A function is a set of statements organized together to perform a specific task. A Swift 4 function can be as simple as a simple C function to as complex as an Objective C language function. It allows us to pass local and global parameter values inside the function calls.</p>
<ul class="list">
<li><p><b>Function Declaration</b> &minus; tells the compiler about a function's name, return type, and parameters.</p></li>
<li><p><b>Function Definition</b> &minus; It provides the actual body of the function.</p></li>
</ul>
<p>Swift 4 functions contain parameter type and its return types.</p>
<h2>Function Definition</h2>
<p>In Swift 4, a function is defined by the "func" keyword. When a function is newly defined, it may take one or several values as input 'parameters' to the function and it will process the functions in the main body and pass back the values to the functions as output 'return types'.</p>
<p>Every function has a function name, which describes the task that the function performs. To use a function, you "call" that function with its name and pass input values (known as arguments) that match the types of the function's parameters. Function parameters are also called as 'tuples'.</p>
<p>A function's arguments must always be provided in the same order as the function's parameter list and the return values are followed by &rarr;.</p>
<h3>Syntax</h3>
<pre class="result notranslate">
func funcname(Parameters) -&gt; returntype {
   Statement1
   Statement2
   ---
   Statement N
   return parameters
}
</pre>
<p>Take a look at the following code. The student’s name is declared as string datatype declared inside the function 'student' and when the function is called, it will return student’s name.</p>
<a href="http://tpcg.io/LRdK5a" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func student(name: String) -&gt; String {
   return name
}

print(student(name: "First Program"))
print(student(name: "About Functions"))
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
First Program
About Functions
</pre>
<h2>Calling a Function</h2>
<p>Let us suppose we defined a function called 'display' to Consider for example to display the numbers a function with function name 'display' is initialized first with argument 'no1' which holds integer data type. Then the argument 'no1' is assigned to argument 'a' which hereafter will point to the same data type integer. Now the argument 'a' is returned to the function. Here display() function will hold the integer value and return the integer values when each and every time the function is invoked.</p>
<a href="http://tpcg.io/aIm6Wj" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func display(no1: Int) -&gt; Int {
   let a = no1
   return a
}

print(display(no1: 100))
print(display(no1: 200))
</pre>
<p>When we run above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
100
200
</pre>
<h2>Parameters and Return Values</h2>
<p>Swift 4 provides flexible function parameters and its return values from simple to complex values. Similar to that of C and Objective C, functions in Swift 4 may also take several forms.</p>
<h3>Functions with Parameters</h3>
<p>A function is accessed by passing its parameter values to the body of the function. We can pass single to multiple parameter values as tuples inside the function.</p>
<a href="http://tpcg.io/mOvrdL" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func mult(no1: Int, no2: Int) -&gt; Int {
   return no1*no2
}

print(mult(no1: 2, no2: 20))
print(mult(no1: 3, no2: 15))
print(mult(no1: 4, no2: 30))
</pre>
<p>When we run above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
40
45
120
</pre>
<h2>Functions without Parameters</h2>
<p>We may also have functions without any parameters.</p>
<h3>Syntax</h3>
<pre class="result notranslate">
func funcname() -&gt; datatype {
   return datatype
}
</pre>
<p>Following is an example having a function without a parameter &minus;</p>
<a href="http://tpcg.io/pot0RK" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func votersname() -&gt; String {
   return "Alice"
}
print(votersname()) 
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
Alice
</pre>
<h2>Functions with Return Values</h2>
<p>Functions are also used to return string, integer, and float data type values as return types. To find out the largest and smallest number in a given array function 'ls' is declared with large and small integer datatypes.</p>
<p>An array is initialized to hold integer values. Then the array is processed and each and every value in the array is read and compared for its previous value. When the value is lesser than the previous one it is stored in 'small' argument, otherwise it is stored in 'large' argument and the values are returned by calling the function.</p>
<a href="http://tpcg.io/sfuXsE" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func ls(array: [Int]) -&gt; (large: Int, small: Int) {
   var lar = array[0]
   var sma = array[0]

   for i in array[1..&lt;array.count] {
      if i &lt; sma {
         sma = i
      } else if i &gt; lar {
         lar = i
      }
   }
   return (lar, sma)
}

let num = ls(array: [40,12,-5,78,98])
print("Largest number is: \(num.large) and smallest number is: \(num.small)")
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
Largest number is: 98 and smallest number is: -5
</pre>
<h2>Functions without Return Values</h2>
<p>Some functions may have arguments declared inside the function without any return values. The following program declares <b>a</b> and <b>b</b> as arguments to the sum() function. inside the function itself the values for arguments <b>a</b> and <b>b</b> are passed by invoking the function call sum() and its values are printed thereby eliminating return values.</p>
<a href="http://tpcg.io/AeI1yi" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func sum(a: Int, b: Int) {
   let a = a + b
   let b = a - b
   print(a, b)
}

sum(a: 20, b: 10)
sum(a: 40, b: 10)
sum(a: 24, b: 6)
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
30 20
50 40
30 24
</pre>
<h2>Functions with Optional Return Types</h2>
<p>Swift 4 introduces 'optional' feature to get rid of problems by introducing a safety measure. Consider for example we are declaring function values return type as integer but what will happen when the function returns a string value or either a nil value. In that case compiler will return an error value. 'optional' are introduced to get rid of these problems.</p>
<p>Optional functions will take two forms 'value' and a 'nil'. We will mention 'Optionals' with the key reserved character '?' to check whether the tuple is returning a value or a nil value.</p> 
<a href="http://tpcg.io/E6SvAs" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func minMax(array: [Int]) -&gt; (min: Int, max: Int)? {
   if array.isEmpty { return nil }
   var currentMin = array[0]
   var currentMax = array[0]
   
   for value in array[1..&lt;array.count] {
      if value &lt; currentMin {
         currentMin = value
      } else if value &gt; currentMax {
         currentMax = value
      }
   }
   return (currentMin, currentMax)
}

if let bounds = minMax(array: [8, -6, 2, 109, 3, 71]) {
   print("min is \(bounds.min) and max is \(bounds.max)")
}
</pre>
<p>When we run above program using playground, we get following result &minus;</p>
<pre class="result notranslate">
min is -6 and max is 109
</pre>
<p>''Optionals' are used to check 'nil' or garbage values thereby consuming lot of time in debugging and make the code efficient and readable for the user.</p>
<h2>Functions Local Vs External Parameter Names</h2>
<h3>Local Parameter Names</h3>
<p>Local parameter names are accessed inside the function alone.</p>
<pre class="result notranslate">
func sample(number: Int) {
   print(number)
}
</pre>
<p>Here, the <b>func</b> sample argument number is declared as internal variable since it is accessed internally by the function sample(). Here the 'number' is declared as local variable but the reference to the variable is made outside the function with the following statement &minus;</p>
<a href="http://tpcg.io/fYWC4G" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func sample(number: Int) {
   print(number)
}

sample(number: 1)
sample(number: 2)
sample(number: 3)
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
1
2
3
</pre>
<h2>External Parameter Names</h2>
<p>External parameter names allow us to name a function parameters to make their purpose more clear. For example below you can name two function parameters and then call that function as follows &minus;</p>
<a href="http://tpcg.io/cSpDwh" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func pow(firstArg a: Int, secondArg b: Int) -&gt; Int {
   var res = a
   for _ in 1..&lt;b {
      res = res * a
   }
   print(res)
   return res
}

pow(firstArg:5, secondArg:3)
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
125
</pre>
<h2>Variadic Parameters</h2>
<p>When we want to define function with multiple number of arguments, then we can declare the members as 'variadic' parameters. Parameters can be specified as variadic by (···) after the parameter name.</p>
<a href="http://tpcg.io/kvKSr6" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func vari&lt;N&gt;(members: N...){
   for i in members {
      print(i)
   }
}

vari(members: 4,3,5)
vari(members: 4.5, 3.1, 5.6)
vari(members: "Swift 4", "Enumerations", "Closures")
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
4
3
5
4.5
3.1
5.6
Swift 4
Enumerations
Closures
</pre>
<h2>Constant, Variable and I/O Parameters</h2>
<p>Functions by default consider the parameters as 'constant', whereas the user can declare the arguments to the functions as variables also. We already discussed that 'let' keyword is used to declare constant parameters and variable parameters is defined with 'var' keyword.</p>
<p>I/O parameters in Swift 4 provide functionality to retain the parameter values even though its values are modified after the function call. At the beginning of the function parameter definition, 'inout' keyword is declared to retain the member values.</p>
<p>It derives the keyword 'inout' since its values are passed 'in' to the function and its values are accessed and modified by its function body and it is returned back 'out' of the function to modify the original argument.</p>
<p>Variables are only passed as an argument for in-out parameter since its values alone are modified inside and outside the function. Hence no need to declare strings and literals as in-out parameters. '&amp;' before a variable name refers that we are passing the argument to the in-out parameter.</p>
<a href="http://tpcg.io/WZ7Trc" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func temp(a1: inout Int, b1: inout Int) {
   let t = a1
   a1 = b1
   b1 = t
}

var no = 2
var co = 10
temp(a1: &amp;no, b1: &amp;co)
print("Swapped values are \(no), \(co)")
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
Swapped values are 10, 2
</pre>
<h2>Function Types &amp; its Usage</h2>
<p>Each and every function follows the specific function by considering the input parameters and outputs the desired result.</p>
<pre class="result notranslate">
func inputs(no1: Int, no2: Int) -&gt; Int {
   return no1/no2
}
</pre>
<p>Following is an example &minus;</p>
<a href="http://tpcg.io/svjmOF" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func inputs(no1: Int, no2: Int) -&gt; Int {
   return no1/no2
}

print(inputs(no1: 20, no2: 10))
print(inputs(no1: 36, no2: 6))
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
2
6
</pre>
<p>Here the function is initialized with two arguments <b>no1</b> and <b>no2</b> as integer data types and its return type is also declared as 'int'</p>
<pre class="result notranslate">
Func inputstr(name: String) -&gt; String {
   return name
}
</pre>
<p>Here the function is declared as <b>string</b> datatype.</p>
<p>Functions may also have <b>void</b> data types and such functions won't return anything.</p>
<a href="http://tpcg.io/mN0NVs" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func inputstr() {
   print("Swift 4 Functions")
   print("Types and its Usage")
}
inputstr()
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
Swift 4 Functions
Types and its Usage
</pre>
<p>The above function is declared as a void function with no arguments and no return values.</p>
<h2>Using Function Types</h2>
<p>Functions are first passed with integer, float or string type arguments and then it is passed as constants or variables to the function as mentioned below.</p>
<pre class="prettyprint notranslate">
var addition: (Int, Int) -&gt; Int = sum
</pre>
<p>Here sum is a function name having 'a' and 'b' integer variables which is now declared as a variable to the function name addition. Hereafter both addition and sum function both have same number of arguments declared as integer datatype and also return integer values as references.</p>
<a href="http://tpcg.io/7R2x1q" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func sum(a: Int, b: Int) -&gt; Int {
   return a + b
}
var addition: (Int, Int) -&gt; Int = sum
print("Result: \(addition(40, 89))")
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
Result: 129
</pre>
<h2>Function Types as Parameter Types &amp; Return Types</h2>
<p>We can also pass the function itself as parameter types to another function.</p>
<pre class="prettyprint notranslate">
func sum(a: Int, b: Int) -&gt; Int {
   return a + b
}
var addition: (Int, Int) -&gt; Int = sum
print("Result: \(addition(40, 89))")

func another(addition: (Int, Int) -&gt; Int, a: Int, b: Int) {
   print("Result: \(addition(a, b))")
}
another(sum, 10, 20)
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
Result: 129
Result: 30
</pre>
<h2>Nested Functions</h2>
<p>A nested function provides the facility to call the outer function by invoking the inside function.</p>
<a href="http://tpcg.io/WWsZ2D" target="_blank" rel="nofollow" class="demo"><i class="fa-external-link"></i> Live Demo</a>
<pre class="prettyprint notranslate">
func calcDecrement(forDecrement total: Int) -&gt; () -&gt; Int {
   var overallDecrement = 0
   func decrementer() -&gt; Int {
      overallDecrement -= total
      return overallDecrement
   }
   return decrementer
}

let decrem = calcDecrement(forDecrement: 30)
print(decrem())
</pre>
<p>When we run the above program using playground, we get the following result &minus;</p>
<pre class="result notranslate">
-30
</pre>
<hr />
<div class="pre-btn">
<a href="/swift/swift_dictionaries.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="print-btn center">
<a href="/cgi-bin/printpage.cgi" target="_blank"><i class="icon icon-print big-font"></i> Print</a>
</div>
<div class="nxt-btn">
<a href="/swift/swift_closures.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<hr />
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div class="bottomadtag">Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>
<div class="row">
<div class="col-md-3" id="rightbar">
<div class="simple-ad">
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/swift/swift_functions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/facebookIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/swift/swift_functions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/twitterIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/swift/swift_functions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/linkedinIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/swift/swift_functions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/googlePlusIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/swift/swift_functions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/StumbleUponIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/swift/swift_functions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;">
<img src="/images/reddit.jpg" alt="img" />
</a>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 600;
google_ad_format = "300x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "ca-pub-2537027957187252";
/* Right Side Ad */
google_ad_slot = "right_side_ad";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="footer-copyright">
<div class="container">
<div class="row">
<div class="col-md-1">
<a href="index.htm" class="logo"> <img alt="Tutorials Point" class="img-responsive" src="/scripts/img/logo-footer.png"> </a>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <nav id="sub-menu">
      <ul>
         <li><a href="/about/faq.htm">FAQ's</a></li>
         <li><a href="/about/about_privacy.htm#cookies">Cookies Policy</a></li>
         <li><a href="/about/contact_us.htm">Contact</a></li>
      </ul>
   </nav>
</div>
<div class="col-md-3 col-sm-12 col-xs-12">
<p>&copy; Copyright 2018. All Rights Reserved.</p>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <div class="news-group">
      <input type="text" class="form-control-foot search" name="textemail" id="textemail" autocomplete="off" placeholder="Enter email for newsletter" onfocus="if (this.value == 'Enter email for newsletter...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Enter email for newsletter...';}">
      <span class="input-group-btn"> <button class="btn btn-default btn-footer" id="btnemail" type="submit" onclick="javascript:void(0);">go</button> </span>
      <div id="newsresponse"></div>
   </div>
</div>
</div>
</div>
</div>
</div>
<!-- Libs -->
<script src="/theme/js/custom-min.js?v=7"></script>
<script src="https://www.google-analytics.com/urchin.js">
</script>
<script>
_uacct = "UA-232293-6";
urchinTracker();
$('.pg-icon').click(function(){
   $('.wrapLoader').show();
});
</script>
</div>
</body>
</html>
