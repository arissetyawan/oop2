<!DOCTYPE html>
<!--[if IE 8]><html class="ie ie8"> <![endif]-->
<!--[if IE 9]><html class="ie ie9"> <![endif]-->
<!--[if gt IE 9]><!-->	<html> <!--<![endif]-->
<head>
<!-- Basic -->
<meta charset="utf-8">
<title>Servlets Interview Questions</title>
<meta name="description" content="Servlets Interview Questions - Learning Java Servlets in simple and easy steps using this beginner's tutorial containing basic to advanced knowledge of Java Servlet Technology including Form Data, HTTP Request Header, Response Header, Status Codes, Cookies Handling and Session Tracking." />
<meta name="keywords" content="Servlets, Tutorials, Learning, Beginners, Basics, Environment, Life Cycle, Examples, Client Request, Server Response, Http Codes, Writing Filters, Exceptions, Cookies, Sessions, Database Access, File Uploading, File Uploading, Internationalization." />
<base href="https://www.tutorialspoint.com/" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta name="viewport" content="width=device-width,initial-scale=1.0,user-scalable=yes">
<meta property="og:locale" content="en_US" />
<meta property="og:type" content="website" />
<meta property="fb:app_id" content="471319149685276" />
<meta property="og:site_name" content="www.tutorialspoint.com" />
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="apple-mobile-web-app-status-bar-style" content="black">
<meta name="author" content="tutorialspoint.com">
<script type="text/javascript" src="https://www.tutorialspoint.com/theme/js/script-min-v4.js?v=2"></script>
<link rel="stylesheet" href="https://www.tutorialspoint.com/theme/css/style-min.css?v=3">
<script>
function openNav() {	
  document.getElementById("mySidenav").style.width = "250px";
  document.getElementById("right_obs").style.display = "block";
}
function closeNav() {
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
function close_obs_sidenav(){
  document.getElementById("mySidenav").style.width = "0";
  document.getElementById("right_obs").style.display = "none";
}
</script>
<!-- Head Libs -->
<!--[if IE 8]>
<link rel="stylesheet" type="text/css" href="/theme/css/ie8.css">
<![endif]-->
<style>
select{ border:0 !important; outline: 1px inset black !important; outline-offset: -1px !important; }
.btnsbmt{ background: #d42426 !important;}
ul.nav-list.primary>li a.videolink{    background: none; margin: 0px; padding: 0px; border: 1px solid #d6d6d6;}
div.feature-box div.feature-box-icon, .col-md-3 .course-box, li.heading, div.footer-copyright { background: #d42426 url(/images/pattern.png) repeat center center !important;}
.sub-main-menu .sub-menuu div:hover, .sub-main-menu .viewall, header nav ul.nav-main li a:hover, button.btn-responsive-nav, header div.search button.btn-default { background: #d42426 !important;}
.submenu-item{ border-bottom: 2px solid #d42426 !important; border-top: 2px solid #d42426 !important }
.ace_scroller{overflow: auto!important;}
a.demo{font-family: "Open Sans",Arial,sans-serif; background:#d42426; color:#fff; font-size:13px; padding:3px 10px; border:1px solid #d6d6d6; position:absolute; right:5px; margin:-6px 17px 0px 0px;}
a.demo:hover{opacity:.8}
</style>
<script>
$(document).ready(function() {
  $('input[name="q"]').keydown(function(event){
    if(event.keyCode == 13) {
      event.preventDefault();
      return false;
    }
  });
});
</script>
</head>
<body onload="prettyPrint()">
<div class="wrapLoader">
   <div class="imgLoader">
      <img  src="/images/loading-cg.gif" alt="" width="70" height="70" />
   </div>
</div>
<div id="right_obs" class="display-none" onclick="close_obs_sidenav()"></div>
<header>
   <div class="container">			
      <h1 class="logo">
      <a href="index.htm" title="tutorialspoint">
      <img alt="tutorialspoint" src="/servlets/images/logo.png">
      </a>
      </h1>			
      <ul class="tp-inline-block pull-right" id="tp-head-icons">
        <li>
           <div class="tp-second-nav tp-display-none tp-pointer" onclick="openNav()">
              <i class="fa fa-th-large fa-lg"></i>
           </div>
        </li>
     </ul>
     <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull" style="top: 24px!important"> <i class="icon icon-bars"></i> </button>
      <nav>
         <ul class="nav nav-pills nav-top">
            <li><a href="/about/about_careers.htm" style="background: #fffb09; font-weight: bold;"><i class="icon icon-suitcase"></i> Jobs</a></li>
            <li> <a target="_blank" href="/programming_examples/"><i class="fa fa-cubes"></i> &nbsp;Examples</a> </li>
            <li> <a href="https://www.tutorialspoint.com/whiteboard.htm"><img src="theme/css/icons/image-editor.png" alt="Whiteboard" title="Whiteboard"> &nbsp;Whiteboard</a> </li>
            <li> <a href="https://www.tutorialspoint.com/netmeeting.php"><i class="fa-camera"></i> &nbsp;Net Meeting</a> </li>
            <li> <a href="/online_dev_tools.htm"> <i class="dev-tools-menu" style="opacity:.5"></i> Tools </a> </li>
            <li> <a href="/articles/index.php"><i class="icon icon-file-text-o"></i> &nbsp;Articles</a> </li>            
            <li class="top-icons">
              <ul class="social-icons">
              <li class="facebook"><a href="https://www.facebook.com/tutorialspointindia" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Facebook">Facebook</a></li>
              <li class="googleplus"><a href="https://plus.google.com/u/0/116678774017490391259/posts" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Google+">Google+</a></li>
              <li class="twitter"><a href="https://www.twitter.com/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Twitter">Twitter</a></li>
              <li class="linkedin"><a href="https://www.linkedin.com/company/tutorialspoint" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint @ Linkedin">Linkedin</a></li>
              <li class="youtube"><a href="https://www.youtube.com/channel/UCVLbzhxVTiTLiVKeGV7WEBg" target="_blank" rel="nofollow" data-placement="bottom" title="tutorialspoint YouTube">YouTube</a></li>
              </ul>
           </li>
         </ul>
      </nav>
    </div>
     <div class="sidenav" id="mySidenav">
     <div class="navbar nav-main">
      <div class="container">
         <nav class="nav-main mega-menu">
            <ul class="nav nav-pills nav-main" id="mainMenu">
               <li class="dropdown no-sub-menu"> <a class="dropdown" href="index.htm"><i class="icon icon-home"></i> Home</a> </li>   
               <li class="dropdown no-sub-menu"><a class="dropdown" href="/questions/index.php"><i class="fa fa-send"></i> Q/A </a> </li>
               <li class="dropdown"><a class="dropdown" href="tutorialslibrary.htm"><span class="tut-lib"> Library </span></a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="videotutorials/index.htm"><i class="fa-toggle-right"></i> Videos </a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="tutor_connect/index.php"><i class="fa-user"> </i> Tutors</a></li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="codingground.htm"><i class="fa-code"></i> Coding Ground </a> </li>
               <li class="dropdown no-sub-menu"><a class="dropdown" href="https://store.tutorialspoint.com/"><i class="fa-usd"></i> Store </a> </li>
               <li class="dropdown no-sub-menu">
                  <div class="searchform-popup">
                     <input class="header-search-box" type="text" id="search-string" name="q" placeholder="Search your favorite tutorials..." onfocus="if (this.value == 'Search your favorite tutorials...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Search your favorite tutorials...';}" autocomplete="off">
                     <div class="magnifying-glass"><i class="icon-search"></i> Search </div>
                 </div>
               </li>
            </ul>
         </nav>
        </div>
      </div>	
     </div>	
   </div>	
</header>
<div style="clear:both;"></div>
<div role="main" class="main">
<div class="container">
<div class="row">
<div class="col-md-2">
<aside class="sidebar">
<div class="mini-logo">
<img src="/servlets/images/servlets-mini-logo.jpg" alt="Servlets Tutorial" />
</div>
<ul class="nav nav-list primary left-menu" >
<li><a class="videolink" href="/java_servlet_online_training/index.asp" target="_blank"><img src="/servlets/images/servlets-video-tutorials.jpg" alt="Servlets Video Tutorials" /></a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">Servlets Tutorial</li>
<li><a href="/servlets/index.htm">Servlets - Home</a></li>
<li><a href="/servlets/servlets_overview.htm">Servlets - Overview</a></li>
<li><a href="/servlets/servlets-environment-setup.htm">Servlets - Environment Setup</a></li>
<li><a href="/servlets/servlets-life-cycle.htm">Servlets - Life Cycle</a></li>
<li><a href="/servlets/servlets-first-example.htm">Servlets - Examples</a></li>
<li><a href="/servlets/servlets-form-data.htm">Servlets - Form Data</a></li>
<li><a href="/servlets/servlets-client-request.htm">Servlets - Client Request</a></li>
<li><a href="/servlets/servlets-server-response.htm">Servlets - Server Response</a></li>
<li><a href="/servlets/servlets-http-status-codes.htm">Servlets - Http Codes</a></li>
<li><a href="/servlets/servlets-writing-filters.htm">Servlets - Writing Filters</a></li>
<li><a href="/servlets/servlets-exception-handling.htm">Servlets - Exceptions</a></li>
<li><a href="/servlets/servlets-cookies-handling.htm">Servlets - Cookies Handling</a></li>
<li><a href="/servlets/servlets-session-tracking.htm">Servlets - Session Tracking</a></li>
<li><a href="/servlets/servlets-database-access.htm">Servlets - Database Access</a></li>
<li><a href="/servlets/servlets-file-uploading.htm">Servlets - File Uploading</a></li>
<li><a href="/servlets/servlets-handling-date.htm">Servlets - Handling Date</a></li>
<li><a href="/servlets/servlets-page-redirect.htm">Servlets - Page Redirect</a></li>
<li><a href="/servlets/servlets-hits-counter.htm">Servlets - Hits Counter</a></li>
<li><a href="/servlets/servlets-auto-refresh.htm">Servlets - Auto Refresh</a></li>
<li><a href="/servlets/servlets-sending-email.htm">Servlets - Sending Email</a></li>
<li><a href="/servlets/servlets-packaging.htm">Servlets - Packaging</a></li>
<li><a href="/servlets/servlets-debugging.htm">Servlets - Debugging</a></li>
<li><a href="/servlets/servlets-internationalization.htm">Servlets - Internationalization</a></li>
<li><a href="/servlets/servlets-annotations.htm">Servlets - Annotations</a></li>
</ul>
<ul class="nav nav-list primary left-menu">
<li class="heading">Servlets Useful Resources</li>
<li><a href="/servlets/servlets-questions-answers.htm">Servlets - Questions and Answers</a></li>
<li><a href="/servlets/servlets-quick-guide.htm">Servlets - Quick Guide</a></li>
<li><a href="/servlets/servlets-useful-resources.htm">Servlets - Useful Resources</a></li>
<li><a href="/servlets/servlets-discussion.htm">Servlets - Discussion</a></li>
</ul>
<ul class="nav nav-list primary push-bottom left-menu special">
<li class="sreading">Selected Reading</li>
<li><a target="_top" href="/upsc_ias_exams.htm">UPSC IAS Exams Notes</a></li>
<li><a target="_top" href="/developers_best_practices/index.htm">Developer's Best Practices</a></li>
<li><a target="_top" href="/questions_and_answers.htm">Questions and Answers</a></li>
<li><a target="_top" href="/effective_resume_writing.htm">Effective Resume Writing</a></li>
<li><a target="_top" href="/hr_interview_questions/index.htm">HR Interview Questions</a></li>
<li><a target="_top" href="/computer_glossary.htm">Computer Glossary</a></li>
<li><a target="_top" href="/computer_whoiswho.htm">Who is Who</a></li>
</ul>
 
</aside>
</div>
<!-- PRINTING STARTS HERE -->
<div class="row">
<div class="content">
<div class="col-md-7 middle-col">
<h1>Servlets - Interview Questions</h1>
<hr />
<div style="padding-bottom:5px;padding-left:10px;text-align: center;">Advertisements</div>
<div style="text-align: center;">
<script type="text/javascript"><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 468;
google_ad_height = 60;
google_ad_format = "468x60_as";
google_ad_type = "image";
google_ad_channel = "";
//--></script>
<script type="text/javascript"
src="https://pagead2.googlesyndication.com/pagead/show_ads.js"> 
</script>
</div>
<hr />
<div class="pre-btn">
<a href="/servlets/servlets-questions-answers.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="nxt-btn">
<a href="/servlets/servlets-questions-answers.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<div class="clearer"></div>
<hr />
<p>Dear readers, these <b>Servlets Interview Questions</b> have been designed especially to get you acquainted with the nature of questions you may encounter during your interview for the subject of <b>Servlets Programming</b>. As per my experience, good interviewers hardly planned to ask any particular question during your interview, normally questions start with some basic concept of the subject and later they continue based on further discussion and what you answer:</p>
<section class="toggle">
<label> What are Servlets?</label>
<div class="toggle-content">
<p>Java Servlets are programs that run on a Web or Application server and act as a middle layer between a request coming from a Web browser or other HTTP client and databases or applications on the HTTP server.</p>
</div>
</section>
<section class="toggle">
<label> What are the advantages of servlets over CGI?</label>
<div class="toggle-content">
<p>Servlets offer several advantages in comparison with the CGI.</p>
<ul class="list">
<li><p>Performance is significantly better.</p></li>
<li><p>Servlets execute within the address space of a Web server. It is not necessary to create a separate process to handle each client request.</p></li>
<li><p>Servlets are platform-independent because they are written in Java.</p></li>
<li><p>Java security manager on the server enforces a set of restrictions to protect the resources on a server machine. So servlets are trusted.</p></li>
<li><p>The full functionality of the Java class libraries is available to a servlet. It can communicate with applets, databases, or other software via the sockets and RMI mechanisms that you have seen already.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What are the major tasks of servlets?</label>
<div class="toggle-content">
<p>Servlets perform the following major tasks:</p>
<ul class="list">
<li><p>Read the explicit data sent by the clients (browsers). This includes an HTML form on a Web page or it could also come from an applet or a custom HTTP client program.</p></li>
<li><p>Read the implicit HTTP request data sent by the clients (browsers). This includes cookies, media types and compression schemes the browser understands, and so forth.</p></li>
<li><p>Process the data and generate the results. This process may require talking to a database, executing an RMI or CORBA call, invoking a Web service, or computing the response directly.</p></li>
<li><p>Send the explicit data (i.e., the document) to the clients (browsers). This document can be sent in a variety of formats, including text (HTML or XML), binary (GIF images), Excel, etc.</p></li>
<li><p>Send the implicit HTTP response to the clients (browsers). This includes telling the browsers or other clients what type of document is being returned (e.g., HTML), setting cookies and caching parameters, and other such tasks.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> Explain servlet life cycle.</label>
<div class="toggle-content">
<p>A servlet life cycle can be defined as the entire process from its creation till the destruction. The following are the paths followed by a servlet.</p>
<ul class="list">
<li><p>The servlet is initialized by calling the init () method.</p></li>
<li><p>The servlet calls service() method to process a client's request.</p></li>
<li><p>The servlet is terminated by calling the destroy() method.</p></li>
<li><p>Finally, servlet is garbage collected by the garbage collector of the JVM.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> When init() method of servlet gets called?</label>
<div class="toggle-content">
<p>The init method is designed to be called only once. It is called when the servlet is first created, and not called again for each user request. So, it is used for one-time initializations, just as with the init method of applets.</p>
</div>
</section>
<section class="toggle">
<label> When service() method of servlet gets called?</label>
<div class="toggle-content">
<p>Each time the server receives a request for a servlet, the server spawns a new thread and calls service. The service() method checks the HTTP request type (GET, POST, PUT, DELETE, etc.) and calls doGet, doPost, doPut, doDelete, etc. methods as appropriate.</p>
</div>
</section>
<section class="toggle">
<label> When doGet() method of servlet to be called?</label>
<div class="toggle-content">
<p>A GET request results from a normal request for a URL or from an HTML form that has no METHOD specified and it should be handled by doGet() method.</p>
</div>
</section>
<section class="toggle">
<label> When doPost() method of servlet to be called?</label>
<div class="toggle-content">
<p>A POST request results from an HTML form that specifically lists POST as the METHOD and it should be handled by doPost() method.</p>
</div>
</section>
<section class="toggle">
<label> When destroy() method of servlet gets called?</label>
<div class="toggle-content">
<p>The destroy() method is called only once at the end of the life cycle of a servlet. </p>
</div>
</section>
<section class="toggle">
<label> For what purpose init() method of a servlet is used?</label>
<div class="toggle-content">
<p>The init() method simply creates or loads some data that will be used throughout the life of the servlet.</p>
</div>
</section>
<section class="toggle">
<label> For what purpose destroy() method of a servlet is used?</label>
<div class="toggle-content">
<p>This method gives your servlet a chance to close database connections, halt background threads, write cookie lists or hit counts to disk, and perform other such cleanup activities.</p>
</div>
</section>
<section class="toggle">
<label> For what purpose doGet() method of a servlet is used?</label>
<div class="toggle-content">
<p>This method should be used to get data from server.</p>
</div>
</section>
<section class="toggle">
<label> For what purpose doPost() method of a servlet is used?</label>
<div class="toggle-content">
<p>This method should be used to process data on the server. </p>
</div>
</section>
<section class="toggle">
<label> Explain working of service() method of a servlet.</label>
<div class="toggle-content">
<p>The service() method is the main method to perform the actual task. The servlet container (i.e. web server) calls the service() method to handle requests coming from the client( browsers) and to write the formatted response back to the client.</p>
<p>Each time the server receives a request for a servlet, the server spawns a new thread and calls service. The service() method checks the HTTP request type (GET, POST, PUT, DELETE, etc.) and calls doGet, doPost, doPut, doDelete, etc. methods as appropriate.</p>
<p>Here is the signature of this method:</p>
<pre class="prettyprint notranslate">
public void service(ServletRequest request, 
                    ServletResponse response) 
   throws ServletException, IOException{
}
</pre>
<p>The service () method is called by the container and service method invokes doGe, doPost, doPut, doDelete, etc. methods as appropriate. So you have nothing to do with service() method but you override either doGet() or doPost() depending on what type of request you receive from the client.</p>
</div>
<section class="toggle">
<label> How to read form data in servlet?</label>
<div class="toggle-content">
<p>Servlets handles form data parsing automatically using the following methods depending on the situation:</p>
<ul class="list">
<li><p><b>getParameter():</b> You call request.getParameter() method to get the value of a form parameter.</p></li>
<li><p><b>getParameterValues():</b> Call this method if the parameter appears more than once and returns multiple values, for example checkbox.</p></li>
<li><p><b>getParameterNames():</b> Call this method if you want a complete list of all parameters in the current request.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> How to read name of all parameters in servlet?</label>
<div class="toggle-content">
<p>getParameterNames() method of HttpServletRequest returns complete list of all parameters in the current request. This method returns an Enumeration that contains the parameter names in an unspecified order. </p>
<p>Once we have an Enumeration, we can loop down the Enumeration in the standard manner, using hasMoreElements() method to determine when to stop and using nextElement() method to get each parameter name.</p>
</div>
</section>
<section class="toggle">
<label> How to read http header information in servlet?</label>
<div class="toggle-content">
<p>We can use getHeaderNames() method of HttpServletRequest to read the HTTP header infromation. This method returns an Enumeration that contains the header  information associated with the current HTTP request.</p>
<p>Once we have an Enumeration, we can loop down the Enumeration in the standard manner, using hasMoreElements() method to determine when to stop and using nextElement() method to get each parameter name. </p>
</div>
</section>
<section class="toggle">
<label> What is HTTPServletRequest class?</label>
<div class="toggle-content">
<p> When a browser requests for a web page, it sends lot of information to the web server which can not be read directly because this information travel as a part of header of HTTP request. HTTPServletRequest represents this HTTP Request.</p>
</div>
</section>
<section class="toggle">
<label> What is HTTPServletResponse class?</label>
<div class="toggle-content">
<p>when a Web server responds to a HTTP request to the browser, the response typically consists of a status line, some response headers, a blank line, and the document. HTTPServletResponse represents this HTTP Response.</p>
</div>
</section>
<section class="toggle">
<label> How to write html contents using servlets?</label>
<div class="toggle-content">
<p> Get the object of PrintWriter using request.</p>
<pre class="prettyprint notranslate">
PrintWriter out = response.getWriter();
</pre>
<p> Now print html.</p>
<pre class="prettyprint notranslate">
out.println("Hello World");
</pre>
</div>
</section>
<section class="toggle">
<label> How to send an authentication error from a servlet?</label>
<div class="toggle-content">
<p>We can use setStatus(statuscode) method of HttpServletResponse to send an authentication error.</p>
<pre class="prettyprint notranslate">
// Set error code and reason.
response.sendError(407, "Need authentication!!!" );
</pre>
</div>
</section>
<section class="toggle">
<label> How to redirect a request from a servlet to another servlet?</label>
<div class="toggle-content">
<p>Page redirection is generally used when a document moves to a new location and we need to send the client to this new location or may be because of load balancing, or for simple randomization.
The simplest way of redirecting a request to another page is using method sendRedirect() of response object.</p>
</div>
</section>
<section class="toggle">
<label> How sendRedirect method works?</label>
<div class="toggle-content">
<p>This method generates a 302 response along with a Location header giving the URL of the new document.</p>
</div>
</section>
<section class="toggle">
<label> How sendError method works?</label>
<div class="toggle-content">
<p>This method sends a status code (usually 404) along with a short message that is automatically formatted inside an HTML document and sent to the client.</p>
</div>
</section>
<section class="toggle">
<label> What are servlets filters?</label>
<div class="toggle-content">
<p>Servlet Filters are Java classes that can be used in Servlet Programming for the following purposes:</p>
<ul class="list">
<li><p>To intercept requests from a client before they access a resource at back end.</p></li>
<li><p>To manipulate responses from server before they are sent back to the client.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> Name some of the servlets filters?</label>
<div class="toggle-content">
<p>There are various types of filters suggested by the specifications:</p>
<ul class="list">
<li><p>Authentication Filters.</p></li>
<li><p>Data compression Filters.</p></li>
<li><p>Encryption Filters.</p></li>
<li><p>Filters that trigger resource access events.</p></li>
<li><p>Image Conversion Filters.</p></li>
<li><p>Logging and Auditing Filters.</p></li>
<li><p>MIME-TYPE Chain Filters.</p></li>
<li><p>Tokenizing Filters .</p></li>
<li><p>XSL/T Filters That Transform XML Content.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> How to do servlet filter mapping?</label>
<div class="toggle-content">
<p>Filters are deployed in the deployment descriptor file web.xml and then map to either servlet names or URL patterns in your application's deployment descriptor.</p>
</div>
</section>
<section class="toggle">
<label> For what purpose init() method of a filter is used?</label>
<div class="toggle-content">
<p>This method is called by the web container to indicate to a filter that it is being placed into service.</p>
</div>
</section>
<section class="toggle">
<label> For what purpose doFilter() method of a filter is used?</label>
<div class="toggle-content">
<p>This method is called by the container each time a request/response pair is passed through the chain due to a client request for a resource at the end of the chain.</p>
</div>
</section>
<section class="toggle">
<label> For what purpose destroy() method of a filter is used?</label>
<div class="toggle-content">
<p>This method is called by the web container to indicate to a filter that it is being taken out of service.</p>
</div>
</section>
<section class="toggle">
<label> Can multiple filters be configured?</label>
<div class="toggle-content">
<p>Yes.</p>
</div>
</section>
<section class="toggle">
<label> Can filtering be done in an ordered way? If so then how to achieve it?</label>
<div class="toggle-content">
<p>Yes. The order of filter-mapping elements in web.xml determines the order in which the web container applies the filter to the servlet. To reverse the order of the filter, you just need to reverse the filter-mapping elements in the web.xml file.</p>
</div>
</section>
<section class="toggle">
<label> How to configure a central error handling page in servlets?</label>
<div class="toggle-content">
<p>Use the error-page element in web.xml to specify the invocation of servlets in response to certain exceptions or HTTP status codes.</p>
</div>
</section>
<section class="toggle">
<label> How to configure a central error handler in servlets?</label>
<div class="toggle-content">
<p>If you want to have a generic Error Handler for all the exceptions then you should define following error-page instead of defining separate error-page elements for every exception:</p>
<pre class="prettyprint notranslate">
&lt;error-page&gt;
   &lt;exception-type&gt;java.lang.Throwable&lt;/exception-type &gt;
   &lt;location&gt;/ErrorHandler&lt;/location&gt;
&lt;/error-page&gt;
</pre>
</div>
</section>
<section class="toggle">
<label> What are cookies?</label>
<div class="toggle-content">
<p>Cookies are text files stored on the client computer and they are kept for various information tracking purpose. Java Servlets transparently supports HTTP cookies.</p>
</div>
<section class="toggle">
<label> How to create a cookie using servlet?</label>
<div class="toggle-content">
<p>Setting cookies with servlet involves three steps:</p>
<p>(1) Creating a Cookie object: You call the Cookie constructor with a cookie name and a cookie value, both of which are strings.</p>
<pre class="prettyprint notranslate">
Cookie cookie = new Cookie("key","value");
</pre>
<p>Keep in mind, neither the name nor the value should contain white space or any of the following characters:
[ ] ( ) = , " / ? @ : ;</p>
<p>(2) Setting the maximum age: You use setMaxAge to specify how long (in seconds) the cookie should be valid. Following would set up a cookie for 24 hours.</p>
<pre class="prettyprint notranslate">
cookie.setMaxAge(60*60*24); 
</pre>
<p>(3) Sending the Cookie into the HTTP response headers: You use response.addCookie to add cookies in the HTTP response header as follows:</p>
<pre class="prettyprint notranslate">
response.addCookie(cookie);
</pre>
</div>
</section>
<section class="toggle">
<label> How to read a cookie using servlet?</label>
<div class="toggle-content">
<p>To read cookies, you need to create an array of javax.servlet.http.Cookie objects by calling the getCookies( ) method of HttpServletRequest. Then cycle through the array, and use getName() and getValue() methods to access each cookie and associated value.</p>
</div>
</section>
<section class="toggle">
<label> How to delete a cookie using servlet?</label>
<div class="toggle-content">
<p>To delete cookies is very simple. If you want to delete a cookie then you simply need to follow up following three steps:</p>
<ul class="list">
<li><p>Read an already exsiting cookie and store it in Cookie object.</p></li>
<li><p>Set cookie age as zero using setMaxAge() method to delete an existing cookie.</p></li>
<li><p>Add this cookie back into response header.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> What is session?</label>
<div class="toggle-content">
<p>Session provides a way to identify a user across more than one page request or visit to a Web site and to store information about that user. The session persists for a specified time period, across more than one connection or page request from the user.</p>
</div>
</section>
<section class="toggle">
<label> What is URL rewriting?</label>
<div class="toggle-content">
<p>You can append some extra data on the end of each URL that identifies the session, and the server can associate that session identifier with data it has stored about that session.
For example, with http://tutorialspoint.com/file.htm;sessionid=12345, the session identifier is attached as sessionid=12345 which can be accessed at the web server to identify the client.</p>
</div>
</section>
<section class="toggle">
<label> How to create a session in servlet?</label>
<div class="toggle-content">
<p>You would get HttpSession object by calling the public method getSession() of HttpServletRequest, as below:</p>
<pre class="prettyprint notranslate">
// Create a session object if it is already not  created.
HttpSession session = request.getSession();
</pre>
</div>
</section>
<section class="toggle">
<label> How to delete a session in servlet?</label>
<div class="toggle-content">
<p>When you are done with a user's session data, you have several options:</p>
<ul class="list">
<li><p><b>Remove a particular attribute:</b> You can call public void removeAttribute(String name) method to delete the value associated with a particular key.</p></li>
<li><p><b>Delete the whole session:</b> You can call public void invalidate() method to discard an entire session.
Setting Session timeout: You can call public void setMaxInactiveInterval(int interval) method to set the timeout for a session individually.</p></li>
<li><p><b>Log the user out:</b> The servers that support servlets 2.4, you can call logout to log the client out of the Web server and invalidate all sessions belonging to all the users.</p></li>
</ul>
</div>
</section>
<section class="toggle">
<label> How to update an attribute in session in servlet?</label>
<div class="toggle-content">
<p>setAttribute(String name, Object value) of HTTPSession object binds an object to this session, using the name specified and can be used to update an attribute in session.</p>
</div>
</section>
<section class="toggle">
<label> How to set session timeout in servlet?</label>
<div class="toggle-content">
<p>setMaxInactiveInterval(int interval) of HTTPSession object specifies the time, in seconds, between client requests before the servlet container will invalidate this session.</p>
</div>
</section>
<section class="toggle">
<label> How to set auto page refresh in servlet?</label>
<div class="toggle-content">
<p>The simplest way of refreshing a web page is using method setIntHeader() of response object.</p>
</div>
</section>
<section class="toggle">
<label> What is internalization?</label>
<div class="toggle-content">
<p>This means enabling a web site to provide different versions of content translated into the visitor's language or nationality.</p>
</div>
</section>
<section class="toggle">
<label> What is localization?</label>
<div class="toggle-content">
<p>This means adding resources to a web site to adapt it to a particular geographical or cultural region for example Hindi translation to a web site.</p>
</div>
</section>
<section class="toggle">
<label> What is locale?</label>
<div class="toggle-content">
<p>This is a particular cultural or geographical region. It is usually referred to as a language symbol followed by a country symbol which is separated by an underscore. For example "en_US" represents english locale for US.</p>
</div>
</section>
<section class="toggle">
<label> How to detect locale in Servlets?</label>
<div class="toggle-content">
<p>Following is the method of request object which returns Locale object.</p>
<pre class="prettyprint notranslate">
java.util.Locale request.getLocale() 
</pre>
</div>
</section>
<section class="toggle">
<label> How to get country name in Servlets?</label>
<div class="toggle-content">
<p>Following method returns a name for the locale's country that is appropriate for display to the user.</p>
<pre class="prettyprint notranslate">
String getDisplayCountry()
</pre>
</div>
</section>
</section>
<h2>What is Next?</h2>
<p>Further, you can go through your past assignments you have done with the subject and make sure you are able to speak confidently on them. If you are fresher then interviewer does not expect you will answer very complex questions, rather you have to make your basics concepts very strong.</p>
<p>Second it really doesn't matter much if you could not answer few questions but it matters that whatever you answered, you must have answered with confidence. So just feel confident during your interview. We at tutorialspoint wish you best luck to have a good interviewer and all the very best for your future endeavor. Cheers :-)</p>
<hr />
<div class="pre-btn">
<a href="/servlets/servlets-questions-answers.htm"><i class="icon icon-arrow-circle-o-left big-font"></i> Previous Page</a>
</div>
<div class="print-btn center">
<a href="/cgi-bin/printpage.cgi" target="_blank"><i class="icon icon-print big-font"></i> Print</a>
</div>
<div class="nxt-btn">
<a href="/servlets/servlets-questions-answers.htm">Next Page <i class="icon icon-arrow-circle-o-right big-font"></i>&nbsp;</a>
</div>
<div class="parent-file">servlets-questions-answers.htm</div>
<hr>
<!-- PRINTING ENDS HERE -->
<div class="bottomgooglead">
<div class="bottomadtag">Advertisements</div>
<script><!--
var width = 580;
var height = 400;
var format = "580x400_as";
if( window.innerWidth < 468 ){
   width = 300;
   height = 250;
   format = "300x250_as";
}
google_ad_client = "pub-7133395778201029";
google_ad_width = width;
google_ad_height = height;
google_ad_format = format;
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>
<div class="row">
<div class="col-md-3" id="rightbar">
<div class="simple-ad">
<a href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.facebook.com/sharer.php?u=' + 'https://www.tutorialspoint.com/servlets/servlets_interview_questions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/facebookIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://twitter.com/share?url=' + 'https://www.tutorialspoint.com/servlets/servlets_interview_questions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/twitterIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.linkedin.com/cws/share?url=' + 'https://www.tutorialspoint.com/servlets/servlets_interview_questions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/linkedinIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://plus.google.com/share?url=https://www.tutorialspoint.com/servlets/servlets_interview_questions.htm','sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/googlePlusIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://www.stumbleupon.com/submit?url=https://www.tutorialspoint.com/servlets/servlets_interview_questions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=456,top='+sTop+',left='+sLeft);return false;">
<img src="/images/StumbleUponIcon.jpg" alt="img" />
</a>
<a  href="javascript:void(0)" onclick="var sTop = window.screen.height/2-(218); var sLeft = window.screen.width/2-(313);window.open('https://reddit.com/submit?url=https://www.tutorialspoint.com/servlets/servlets_interview_questions.htm&amp;title='+ document.title,'sharer','toolbar=0,status=0,width=626,height=656,top='+sTop+',left='+sLeft);return false;">
<img src="/images/reddit.jpg" alt="img" />
</a>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 250;
google_ad_format = "300x250_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "pub-7133395778201029";
google_ad_width = 300;
google_ad_height = 600;
google_ad_format = "300x600_as";
google_ad_type = "image";
google_ad_channel ="";
//--></script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
<div class="rightgooglead">
<script><!--
google_ad_client = "ca-pub-2537027957187252";
/* Right Side Ad */
google_ad_slot = "right_side_ad";
google_ad_width = 300;
google_ad_height = 250;
//-->
</script>
<script src="https://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
</div>
</div>
</div>
</div>
</div>
</div>

<div class="footer-copyright">
<div class="container">
<div class="row">
<div class="col-md-1">
<a href="index.htm" class="logo"> <img alt="Tutorials Point" class="img-responsive" src="/scripts/img/logo-footer.png"> </a>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <nav id="sub-menu">
      <ul>
         <li><a href="/about/faq.htm">FAQ's</a></li>
         <li><a href="/about/about_privacy.htm#cookies">Cookies Policy</a></li>
         <li><a href="/about/contact_us.htm">Contact</a></li>
      </ul>
   </nav>
</div>
<div class="col-md-3 col-sm-12 col-xs-12">
<p>&copy; Copyright 2018. All Rights Reserved.</p>
</div>
<div class="col-md-4 col-sm-12 col-xs-12">
   <div class="news-group">
      <input type="text" class="form-control-foot search" name="textemail" id="textemail" autocomplete="off" placeholder="Enter email for newsletter" onfocus="if (this.value == 'Enter email for newsletter...') {this.value = '';}" onblur="if (this.value == '') {this.value = 'Enter email for newsletter...';}">
      <span class="input-group-btn"> <button class="btn btn-default btn-footer" id="btnemail" type="submit" onclick="javascript:void(0);">go</button> </span>
      <div id="newsresponse"></div>
   </div>
</div>
</div>
</div>
</div>
</div>
<!-- Libs -->
<script src="/theme/js/custom-min.js?v=7"></script>
<script src="https://www.google-analytics.com/urchin.js">
</script>
<script>
_uacct = "UA-232293-6";
urchinTracker();
$('.pg-icon').click(function(){
   $('.wrapLoader').show();
});
</script>
</div>
</body>
</html>
